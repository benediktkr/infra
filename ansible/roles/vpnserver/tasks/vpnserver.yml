- name: install openvpn, easy-rsa, dnsmasq
  apt:
    name:
    - openvpn
    - easy-rsa
    - dnsmasq
    update_cache: yes
    state: present

- name: template dnsmasq.conf
  template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
  tags:
    - dnsmasq
  notify: restart dnsmasq

- name: enable ip_forward in proc
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes

  #shell: "bash -c 'echo 1 > /proc/sys/net/ipv4/ip_forward'"

- name: enable ip_forward in sysctl.conf
  replace:
    path: /etc/sysctl.conf
    regexp: '^#net.ipv4.ip_forward.*$'
    replace: 'net.ipv4.ip_forward=1'
  notify: systemctl daemon reload

- name: set AUTOSTART in /etc/default/openvpn
  replace:
    path: /etc/default/openvpn
    regexp: '^#AUTOSTART\="all"'
    replace: 'AUTOSTART="all"'

- name: copy openvpn config
  copy:
    src: "{{ item }}"
    dest: "/etc/openvpn/{{ item }}"
  with_items:
    - server.conf
    - ca.crt
    - server.crt
  notify: reload openvpn

- name: copy openvpn secrets
  copy:
    src: "private/vpnserver/openvpn/{{ item }}"
    dest: "/etc/openvpn/{{ item }}"
  with_items:
    - server.key
    - dh2048.pem
    - ta.key
  notify: reload openvpn

- name: make sure ccd dir exists
  file:
    path: /etc/openvpn/ccd
    state: directory
    mode: 0755

- name: set client specific settings
  copy:
    src: "{{ item }}"
    dest: "/etc/openvpn/ccd/{{ item }}"
  with_items:
    - wifi001
    - benedikt
    - ernesto
  #notify: reload openvpn

# Iptables will need to manually be loaded after boot (in case a bad file is written)
# TODO: Add a simple script that applies them 5 minutes after a reboot or something
- name: copy iptables rules (as a file, will override other rules)
  copy:
    src: iptables.rules
    dest: /etc/iptables.rules
  tags:
    - iptables
  notify: apply iptables rules

- name: cron to reload iptables rules 3 minutes after reboot
  cron:
    name: iptables load
    special_time: reboot
    job: "sleep 180 && /sbin/iptables-restore < /etc/iptables.rules"
    user: root
  tags:
    - cron
    - iptables

- name: copy checkclients.py
  copy:
    src: checkclients.py
    dest: /usr/local/bin/checkclients.py
    mode: 755
    owner: root
    group: root
  tags:
    - checkclients

- name: cron for checkclients
  cron:
    name: checkclients.py
    minute: "*/5"
    job: "/usr/local/bin/checkclients.py"
    user: root
  tags:
    - checkclients
    - cron
