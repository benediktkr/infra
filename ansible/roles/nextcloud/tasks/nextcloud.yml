---

- name: create dir structure
  file:
    path: "{{ nextcloud_root }}/{{ item['dir'] }}"
    state: directory
    mode: 0750
    owner: "{{ item['owner'] | default('www-data') }}"
    group: "{{ item['group'] | default('www-data') }}"
  with_items:
    - { dir: html, group: "root" }
    - { dir: data }


# Had to copy ssl_match_hostname from
#   /usr/local/lib/python2.7/dist-pacakges/backports
# to
#  /usr/lib/python2.7/dist-packages/backports
# after upgrading debian
- name: start docker container
  docker_container:
    name: "{{ nextcloud_container_name }}"
    image: "nextcloud:{{ nextcloud_version }}"
    auto_remove: no
    detach: yes
    pull: yes
    state: started
    env:
      NEXTCLOUD_DATA_DIR: "/data"
    ports:
      - "{{ nextcloud_exposed_port }}:80"
    volumes:
      - "{{ nextcloud_root }}/data:/data"
      - "{{ nextcloud_root }}/html:/var/www/html"
  tags:
    - docker

- name: add to certbot
  command: "/usr/local/bin/certbot certonly -n --nginx -d {{ nextcloud_url }} --agree-tos --email {{ myemail }}"
  args:
    creates: "/etc/letsencrypt/live/{{ nextcloud_url }}/fullchain.pem"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  tags:
    - letsencrypt

- name: template nginx vhost
  template:
    src: nginx-site.conf.j2
    dest: "/etc/nginx/sites-enabled/01-nextcloud.sudo.is"
  tags:
    - nginx
  notify: reload nginx

- name: template uploadsize.conf
  template:
    src: nginx-uploadsize.conf.j2
    dest: "/etc/nginx/conf.d/uploadsize.conf"
  tags:
    - nginx
  notify: reload nginx

- name: nextcloud cron
  cron:
    name: nextcloud
    minute: "*/15"
    job: "/usr/bin/docker exec --user www-data {{ nextcloud_container_name }} php cron.php >> /tmp/nextcloud_cron.log"

- name: thumbnails cron
  cron:
    name: nextcloud_thumbnails
    minute: "*/15"
    job: "/usr/bin/docker exec --user www-data {{ nextcloud_container_name }} php occ preview:pre-generate >> /tmp/nextcloud_previews.log"
