- name: packages for temper
  apt:
    name:
      - python3-serial
      - libatlas-base-dev # numpy
      - libudev-dev # python-openzwave
      - g++ # python-openzwave
      - libyaml-dev # python-openzwave
    state: present
  tags:
    - packages

- name: pip packages for temper stuff
  pip:
    name:
      - numpy
      - matplotlib
      - zmq
    state: present
    executable: /usr/bin/pip3
  tags:
    - packages

- name: get site-packages path
  command: /usr/bin/python3 -c "import site; print(site.getsitepackages()[0])"
  register: site_packages
  changed_when: False
  tags: temper

- name: create dir for temper
  file:
    path: /srv/temper
    state: directory

# this isnt in the form of a package and i didnt want to
# just copy the code to my repo
- name: clone temper lib from github
  git:
    repo: https://github.com/urwen/temper.git
    dest: /srv/temper/
    version: master
    update: yes
    clone: yes
    force: yes

- name: copy temper.py to site-packages
  copy:
    remote_src: yes
    src: /srv/temper/temper.py
    dest: "{{ site_packages.stdout }}"

- name: copy my scripts to /usr/local/sbin
  copy:
    src: "{{ item }}"
    dest: "/usr/local/sbin/{{ item }}"
    mode: 0755
  with_items:
    - temper_read.py
    - temper_pub.py
  tags:
    - temperscripts
    - graphtemp
  notify: restart services

- name: copy my scripts to /usr/local/bin
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  with_items:
    - simplestate.py
    - graphtemps.py
    - temper_sub.py
    - screen_sub.py
    - screen_pub.py
    - unifi.py
  tags:
    - graphtemps
    - temperscripts
  notify: restart services

- name: include secrets
  include_vars: private/temper.yml

- name: template people.json
  template:
    src: people.json.j2
    dest: /usr/local/etc/people.json
    mode: 0755
  tags:
    - screen_pub

# raspbian ingores cron files with a dot in the name
- name: install crontab for temperature stuff
  copy:
    src: temper.cron
    dest: /etc/cron.d/temper
  tags:
    - graphtemps

- name: copy proxy.py
  copy:
    src: proxy.py
    dest: /usr/local/bin/proxy.py
    mode: 0755
  tags:
    - zmq_proxy
    - proxy
  when: proxy_enabled | bool
  notify: restart proxy

- name: install systemd config file for proxy when enabled
  template:
    src: pythonscript.systemd.j2
    dest: "/etc/systemd/system/proxy.service"
  vars:
    - name: "proxy.py"
  tags:
    - zmq_proxy
    - proxy
  when: proxy_enabled | bool

- name: enable and start proxy
  systemd:
    name: proxy
    state: started
    enabled: yes
  tags:
    - zmq_proxy
    - proxy
  when: proxy_enabled | bool

- name: disable and stop proxy if its not enabled for this host
  systemd:
    name: proxy
    state: stopped
    enabled: no
  when: not proxy_enabled | bool
  tags:
    - zmq_proxy
    - proxy

- name: install systemd config files
  template:
    src: pythonscript.systemd.j2
    dest: "/etc/systemd/system/{{ item }}.service"
  vars:
    - name: "{{ item }}.py"
    - env:
    #- stdout: "file:/var/log/{{ item }}.log"
    #- stderr: "file:/var/log/{{ item }}.log"
  with_items: "{{ modes_available }}"
  tags:
    - mysystemd
  notify: daemon-reload

- name: enabling and starting services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ modes_enabled }}"
  tags:
    - mysystemd

- name: disabling and stopping services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items: "{{ modes_disabled }}"
  tags:
   - mysystemd
