---

- name: add apt key
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present
  when: ansible_distribution == "Debian"
  tags:
    - packages

- name: add repo for debian
  apt_repository:
    repo: "deb http://nginx.org/packages/mainline/debian {{ ansible_distribution_release }} nginx"
    state: present
    update_cache: yes
  when: ansible_distribution == "Debian"
  tags:
    - packages

- name: install nginx
  apt:
    name:
      - nginx
      - uwsgi
      - uwsgi-plugin-python3
    update_cache: yes
    state: latest
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  tags:
    - packages

- name: create dh file
  command: openssl dhparam -out /etc/nginx/dhparam.pem 4096
  args:
    creates: /etc/nginx/dhparam.pem

- name: remove default vhost boilerplate
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: copy nginx.conf
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: reload nginx
  tags:
    - nginx-config

- name: copy conf.d files
  copy:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/{{ item }}"
  with_items:
    - hardening.conf
  notify: reload nginx

- name: template default index.html
  template:
    src: index.html.j2
    dest: /var/www/html/index.html

- name: template default vhost for http
  template:
    src: 00-default-http.j2
    dest: "/etc/nginx/sites-enabled/00-default-http"
  notify: reload nginx

- name: copy vhosts (specific roles copy/template their own)
  copy:
    src: "{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
  with_items: "{{ nginx_vhosts }}"
  tags:
    - nginx-config
  notify: reload nginx

- meta: flush_handlers

- name: install certbot from pip (currently the easiest way to get certbot-nginx)
  pip:
    name:
      - certbot
      - certbot-nginx
  tags:
    - letsencrypt
    - packages


# The command in the nextcloud role might be better than this
- name: lets encrypt
  command: "/usr/local/bin/certbot -n --nginx -d {{ item }} --agree-tos --email {{ myemail }}"
  args:
    creates: "/etc/letsencrypt/live/{{ item.split(' ')[0] }}/fullchain.pem"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  with_items: "{{ letsencrypt_defaults }} + ['{{ inventory_hostname }}'] "
  tags:
    - letsencrypt

- name: template default vhost for https since certs and keys exist now
  template:
    src: 00-default-https.j2
    dest: "/etc/nginx/sites-enabled/00-default-https"
  notify: reload nginx
  tags:
  - nginx-config

- name: remove letsencrypt renewal cron job from the cron module
  cron:
    name: letsencrypt_renewal
    weekday: "0"
    minute: "0"
    hour: "16"
    job: "/usr/local/bin/certbot renew -n" # send via telegram
    state: absent
  tags: letsencrypt

- name: template certbot cron renewal job
  template:
    src: letsencrypt.cron
    dest: /etc/cron.d/letsencrypt
  tags:
    - letsencrypt
