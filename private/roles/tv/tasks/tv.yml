---

- name: only works for ubuntu
  fail:
    msg: "this isnt ubuntu"
  when: ansible_lsb.id != "Ubuntu"

- name: gid for bleutooth group
  group:
    name: bluetooth
    gid: "{{ bluetooth_gid | default(118) }}"
  tags: groups

- name: "check if /boot/firmware/syscfg.txt exists to assume if rpi or not"
  stat:
    path: /boot/firmware/syscfg.txt
  register: config_txt

- name: fail if not raspi
  fail:
    msg: "this isnt a raspi"
  when: not config_txt.stat.exists

# vc4-kms-v3d
# vc4-fkms-v3d

- name: enable w1 in bootloader config
  lineinfile:
    path: /boot/firmware/syscfg.txt
    line: "dtoverlay=vc4-fkms-v3d"
    create: no
  register: bootconfig

# molly-guard is usually installed, but it symlinks the real binaries
# through /lib/molly-guard
- name: reboot if needed
  reboot:
    connect_timeout: 2
    search_paths:
      - "/lib/molly-guard"
      - "/upsr/sbin"
      - "/sbin"
  when: bootconfig.changed
    - False

# - name: set a password for tv user
#   user:
#     name: kodi
#     password: "{{ userlist.tv.password_crypted }}"
#     update_password: always
#   ignore_errors: True

- name: "add ppa"
  apt_repository:
    repo: "ppa:team-xbmc/ppa"
    state: present
  tags:
    - packages

- name: install raspberry pi X.org and GPU packages
  apt:
    state: latest
    update_cache: yes
    name:
      - software-properties-common
      - linux-firmware-raspi2
      - libraspberrypi-bin
      - libraspberrypi-dev
      - xserver-xorg-video-fbdev
      - bluez
      - libbluetooth3
      - libbluetooth-dev
      - bluetooth
      - pi-bluetooth
  tags:
    - packages

- name: load kernel module for bt
  modprobe:
    name: bluetooth
    state: present

- name: activate bluetooth
  service:
    name: bluetooth
    enabled: True
    state: started

- name: remove lightdm
  apt:
    name: lightdm
    state: absent
    purge: True
    autoremove: True
  tags: lightdm

- name: xfce xsession
  lineinfile:
    path: "/home/{{ userlist.tv.username }}/.xsession"
    line: "xfce4-session"
    create: yes
    owner: "{{ userlist.tv.uid }}"
    group: "{{ userlist.tv.gid }}"
    mode: 0770

- name: allow systemd to start x
  replace:
    path: /etc/X11/Xwrapper.config
    regexp: '^allowed_users=.*$'
    replace: 'allowed_users=anybody'

- name: install systemd config
  template:
    src: xtv.service.j2
    dest: "/etc/systemd/system/xtv.service"

- name: autostart x as tv
  service:
    name: xtv
    state: started
    enabled: True
    daemon_reload: True

- name: install kodi
  apt:
    name: kodi
    state: latest
  tags:
    - packages
  when: install_kodi|bool
