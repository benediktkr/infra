---

- name: add apt key
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present
  when: ansible_lsb.id == "Debian" and ansible_lsb.codename != "bullseye"
  tags:
    - packages

- name: add repo for debian (except bullseye)
  apt_repository:
    repo: "deb http://nginx.org/packages/mainline/debian {{ ansible_distribution_release }} nginx"
    state: present
    update_cache: yes
  when: ansible_lsb.id == "Debian" and ansible_lsb.codename != "bullseye"
  tags:
    - packages

- name: ensure lestencrypt permissions
  file:
    state: directory
    owner: root
    group: root
    mode: "{{ item['mode'] }}"
    path: "{{ item['path'] }}"
  tags:
    - letsencrypt
  with_items:
    - { path: /etc/letsencrypt, mode: '0755' }
    - { path: /etc/letsencrypt/live, mode: '0700' }

- name: install current letsencrypt wildcards
  copy:
    src: "private/letsencrypt/{{ item }}"
    dest: "/etc/letsencrypt/live/"
    owner: root
    group: root
    mode: 0755
  tags:
    - letsencrypt
  notify: reload nginx
  with_items: "{{ letsencrypt_domains }}"

- name: install nginx
  apt:
    name:
      - nginx
      - nginx-extras
      - uwsgi
      - uwsgi-plugin-python3
      - apache2-utils
    update_cache: yes
    state: latest
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  tags:
    - packages

# - name: create dh file
#   command: openssl dhparam -out /etc/nginx/dhparam.pem 4096
#   args:
#     creates: /etc/nginx/dhparam.pem

- name: remove default vhost boilerplate
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: copy nginx.conf
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: reload nginx
  tags:
    - nginx-config
    - nginxconf

# - name: copy conf.d files
#   copy:
#     src: "{{ item }}"
#     dest: "/etc/nginx/conf.d/{{ item }}"
#   with_items:
#     ## - hardening.conf
#   notify: reload nginx
#   when: False

- name: template default index.html
  template:
    src: index.html.j2
    dest: /var/www/html/index.html

- name: template default vhost
  template:
    src: 00-default.j2
    dest: "/etc/nginx/sites-enabled/00-default"
  notify: reload nginx
  tags: nginx-config

- name: cleanup
  file:
    path: "/etc/nginx/sites-enabled/{{ item }}"
    state: absent
  with_items:
    - 00-default-http
    - 00-default-https

- name: template default proxy vhosts (if any)
  template:
    src: vhost-proxy.j2
    dest: /etc/nginx/sites-enabled/01-proxy-vhosts
  when: "nginx_vhost_proxies is defined"
  tags:
    - nginx-config
    - nginx-vhosts
  notify: reload nginx

- name: copy vhosts (specific roles copy/template their own)
  copy:
    src: "{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
  with_items: "{{ nginx_vhosts | default([])}}"
  tags: nginx-config
  notify: reload nginx

- name: start and enable nginx
  service:
    name: nginx
    enabled: yes
    state: started

- name: remove certbot, should only be on mainframe
  pip:
    name:
      - certbot
      - certbot-nginx
    state: absent
    executable: pip3
  when: 'inventory_hostname != "mainframe.sudo.is"'
  tags:
    - letsencrypt
    - packages


- name: remove letsencrypt renewal cron job from the cron module
  cron:
    name: letsencrypt_renewal
    state: absent
  tags: letsencrypt
  ignore_errors: yes

- name: remove letsencrypt cron file
  file:
    path: /etc/cron.d/letsencrypt
    state: absent
  tags:
    - letsencrypt
