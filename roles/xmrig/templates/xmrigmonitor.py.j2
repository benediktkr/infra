#!/usr/bin/env python3

import os

import requests

import sudoisinflux

def xmrigmonitor():
    try:
        r = requests.get("http://localhost:{{ xmrig_http_port }}/1/summary")
        r.raise_for_status()
    except requests.exceptions.RequestException:
        # for now fail silently, if the http server isnt up,
        # the xmrig isnt running, so we should be alerted that way.
        return


    j = r.json()
    tags = {
        'host': '{{ inventory_hostname }}',
        'worker_id': j['worker_id'],
        'algo': j['algo'],
        'pool': j['connection']['pool']
    }


    hashrate = j['hashrate']['total'][0]
    fields = {
        'hashrate': float(0) if hashrate is None  else hashrate, #uh..
        'hashrate_highest': j['hashrate']['highest'],
        'hugepages': sudoisinflux.int_if_bool(j['hugepages'])
    }

    datapoint = sudoisinflux.datapoint('xmrig', tags, fields)

    sudoisinflux.write([datapoint])

if __name__ == "__main__":

    lockfile = "/tmp/xmrigmonitor.lock"

    # 'x' = raises FileExistsError (errno 17) if file exists
    with open(lockfile, 'x') as f:
        pid = os.getpid()
        f.write("{pid}")

    try:
        xmrigmonitor()
    finally:
        os.remove(lockfile)
