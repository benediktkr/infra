---

# subtitles: https://jellyfin.org/docs/general/server/media/subtitles.html

- name: create dir structure
  file:
    path: "{{ jellyfin_root }}/{{ item }}"
    state: directory
    mode: 0750
    owner: jellyfin
    group: jellyfin
  with_items:
    - config
    - cache
  tags: jellyfin-dirs

- name: make dirs
  file:
    state: directory
    path: /var/www/jellyfin_auth
    owner: www-data
    group: www-data
    mode: 0755
  tags:
    - nginx-config
    - jellyfin-conf
  notify: reload nginx

- name: template html
  template:
    src: private/{{ item.src }}.j2
    dest: "{{ item.dest }}"
    owner: www-data
    group: www-data
    mode: 0755
  with_items:
    - src: jellyfin_auth.html
      dest: /var/www/jellyfin_auth/index.html
    - src: jellyfin_index.html
      dest: "{{ jellyfin_root }}/index.html"
  tags:
    - nginx-config
    - jellyfin-conf

- name: start container
  docker_container:
    name: jellyfin
    image: jellyfin/jellyfin:latest
    auto_remove: yes     # auto remove and no restart policy better for reboots
    detach: yes
    pull: yes
    restart_policy: "no"
    state: started
    user: "{{ systemuserlist.jellyfin.uid }}:{{ grouplist.media.gid }}"
    container_default_behavior: compatibility
    hostname: "{{ jellyfin_url.split('.')[0] }}"
    labels:
      dockerlogs_format: jellyfin
    ports:
      - 127.0.0.1:8096:8096
    mounts:
      - type: bind
        source: "{{ jellyfin_root }}/config"
        target: /config
      - type: bind
        source: "{{ jellyfin_root }}/cache"
        target: /cache
      - type: bind
        source: "{{ jellyfin_media }}"
        target: /media
      - type: bind
        source: "{{ jellyfin_root }}/index.html"
        target: /jellyfin/jellyfin-web/index.html
        read_only: yes
    env:
      JELLYFIN_PublishedServerUrl: "{{ jellyfin_url }}"
  tags:
    - jellyfin-container
    - docker-containers


# - name: get jellyfin container ip
#   shell: "docker inspect jellyfin | jq -r '.[].NetworkSettings.IPAddress'"
#   register: jellyfin_ip
#   changed_when: no
#   tags:
#     - jellyfin-container

- name: jellyfin nginx dir
  file:
    path: /etc/nginx/jellyfin
    state: directory
    owner: www-data
    group: www-data

- name: acl exists
  file:
    state: touch
    path: "/etc/nginx/jellyfin/acl.conf"
    owner: jellyfin
    group: jellyfin
    mode: 0775
  changed_when: false

- name: template auth stuff
  template:
    src: "private/{{ item }}.j2"
    dest: "/etc/nginx/jellyfin/{{ item }}"
  notify: reload nginx
  tags:
    - jellyfin-conf
    - jellyfin-users
    - jellyfin-auth
    - nginx-conf
  with_items:
    - users.digest
    - jellyfin_auth.conf

- name: template acl script
  template:
    src: jellyfin_auth.py.j2
    dest: /usr/local/bin/jellyfin_auth.py
    mode: 0755
    owner: www-data
    group: www-data

- name: install systemd config for auth stuff
  template:
    src: private/jellyfin_auth.service.j2
    dest: "/etc/systemd/system/jellyfin_auth.service"

- name: enable jellyfin_auth
  systemd:
    state: started
    enabled: yes
    daemon_reload: yes
    name: jellyfin_auth


- name: template jellyfin nginx config
  template:
    src: 01-jellyfin.j2
    dest: /etc/nginx/sites-enabled/01-jellyfin
    owner: root
    group: root
    mode: 0775
  tags:
    - nginx-config
    - jellyfin-conf
  notify: reload nginx


# - name: wait for jellyfin container on {{ jellyfin_ip.stdout }}
#   wait_for:
#     port: 8096
#     host: "{{ jellyfin_ip.stdout }}"
#   tags:
#     - jellyfin-container
