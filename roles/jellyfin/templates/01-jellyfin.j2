## https://jellyfin.org/docs/general/networking/nginx.html
{% set domain = jellyfin_url.split('.')[-2:] | join(".")  %}

server {
    listen 80;
    listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    server_name {{ jellyfin_url }};

    # use a variable to store the upstream proxy
    # set $jellyfin jellyfin;
    # resolver 127.0.0.1 valid=30;

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }

    access_log /var/log/nginx/access_{{ jellyfin_url }}.log main;
    error_log /var/log/nginx/error_{{ jellyfin_url }}.log warn;

    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain  }}/privkey.pem;

    #ssl_stapling on;
    #ssl_stapling_verify on;

    client_body_buffer_size 1024m;

    # Security / XSS Mitigation Headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Content Security Policy
    # See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    # External Javascript (such as cast_sender.js for Chromecast) must
    # be whitelisted.

    add_header Content-Security-Policy "default-src https: data: blob:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'";



    location / {
        include /etc/nginx/jellyfin/jellyfin_auth.conf;

        # Proxy main Jellyfin traffic
        proxy_pass http://127.0.0.1:8096;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        # Disable buffering when the nginx proxy gets very resource
        # heavy upon streaming

        #proxy_buffering off;
    }

    # location block for /web - This is purely for aesthetics so
    # /web/#!/ works instead of having to go to /web/index.html/#!/
    location ~ ^/web/$ {
        # Proxy main Jellyfin traffic
        proxy_pass http://127.0.0.1:8096; # /web/index.html/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass http://127.0.0.1:8096;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
}
