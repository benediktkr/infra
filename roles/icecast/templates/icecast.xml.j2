<!--
{{ ansible_managed }}
-->
<icecast>
    <!-- location and admin are two arbitrary strings that are e.g. visible
         on the server info page of the icecast web interface
         (server_version.xsl). -->
    <location>Earth</location>
    <admin>{{ systems_email }}</admin>
    <!-- This is the hostname other people will use to connect to your server.
         It affects mainly the urls generated by Icecast for playlists and yp
         listings.
    -->
    <hostname>{{ icecast_url }}</hostname>


    <!--
         Docs: http://icecast.org/docs/
    -->

    <limits>
        <clients>100</clients>
        <sources>{{ 5 + icecast_mounts|length }}</sources>
        <queue-size>524288</queue-size>
        <client-timeout>30</client-timeout>
        <header-timeout>15</header-timeout>
        <source-timeout>10</source-timeout>
        <!-- If enabled, this will provide a burst of data when a client
             first connects, thereby significantly reducing the startup
             time for listeners that do substantial buffering. However,
             it also significantly increases latency between the source
             client and listening client.  For low-latency setups, you
             might want to disable this. -->

        <burst-on-connect>1</burst-on-connect>
        <!-- same as burst-on-connect, but this allows for being more
             specific on how much to burst. Most people won't need to
             change from the default 64k. Applies to all mountpoints  -->
        <burst-size>65535</burst-size>
    </limits>

    <authentication>
        <source-password>{{ icecast_auth.source.passwd }}</source-password>
        <relay-password>{{ icecast_auth.relay.passwd }}</relay-password>
        <admin-user>{{ icecast_auth.admin.user }}</admin-user>
        <admin-password>{{ icecast_auth.admin.passwd }}</admin-password>
    </authentication>

    <!-- set the mountpoint for a shoutcast source to use, the default if not
         specified is /stream but you can change it here if an alternative is
         wanted or an extension is required
    <shoutcast-mount>/live.nsv</shoutcast-mount>
    -->

    <!-- Uncomment this if you want directory listings -->
    <!--
    <directory>
        <yp-url-timeout>15</yp-url-timeout>
        <yp-url>http://dir.xiph.org/cgi-bin/yp-cgi</yp-url>
    </directory>
    -->

    <!-- You may have multiple <listen-socket> elements -->
    <listen-socket>
        <port>{{ icecast_port }}</port>
        <bind-address>127.0.0.1</bind-address>
        <!-- <shoutcast-mount>/stream</shoutcast-mount> -->
    </listen-socket>
    <!--
    <listen-socket>
        <port>8080</port>
    </listen-socket>
    -->

    <!-- Global header settings
         Headers defined here will be returned for every HTTP request to Icecast.

         The ACAO header makes Icecast public content/API by default
         This will make streams easier embeddable (some HTML5 functionality needs it).
         Also it allows direct access to e.g. /status-json.xsl from other sites.
         If you don't want this, comment out the following line or read up on CORS.
    -->
    <http-headers>
        <header name="Access-Control-Allow-Origin" value="*" />
    </http-headers>


    <!-- Relaying
         You don't need this if you only have one server.
    -->
    <!--<master-server>127.0.0.1</master-server>-->
    <!--<master-server-port>8001</master-server-port>-->
    <!--<master-update-interval>120</master-update-interval>-->
    <!--<master-password>hackme</master-password>-->

    <!-- setting this makes all relays on-demand unless overridden, this is
         useful for master relays which do not have <relay> definitions here.
        proxy
         The default is 0 -->
    <!--<relays-on-demand>1</relays-on-demand>-->

{% for item in icecast_mounts | selectattr("type", "==", "relay") | selectattr("relay_stream", "defined") %}
    <relay>
        <server>{{ item.relay_stream | urlsplit('hostname') }}</server>
        <port>{{ item.relay_stream | urlsplit('port') | default(item.port, true) | default(443, true) }}</port>
        <mount>{{ item.relay_stream | urlsplit('path') }}</mount>
        <local-mount>{{ item.icecast_mount }}</local-mount>
        <on-demand>{{ item.on_demand | default(false) | int }}</on-demand>
        <relay-shoutcast-metadata>{{ item.relay_metadata | default(true) | int }}</relay-shoutcast-metadata>
    </relay>
{% endfor %}

    <!-- Mountpoints
         Only define <mount> sections if you want to use advanced options,
         like alternative usernames or passwords
    -->

    <!-- Default settings for all mounts that don't have a specific <mount type="normal">.
    -->
    <!--
    <mount type="default">
        <public>0</public>
        <intro>/server-wide-intro.ogg</intro>
        <max-listener-duration>3600</max-listener-duration>
        <authentication type="url">
                <option name="mount_add" value="http://auth.example.org/stream_start.php"/>
        </authentication>
        <http-headers>
                <header name="foo" value="bar" />
        </http-headers>
    </mount>
    -->

    <!-- Normal mounts -->
{% for item in icecast_mounts | selectattr("settings", "defined") %}
    <mount type="normal">
        <mount-name>{{ item.icecast_mount }}</mount-name>
{%      set settings = item.settings %}
{%      if "stream_name" in settings %}
        <stream-name>{{ settings.stream_name }}</stream-name>
{%      endif %}
{%      if "stream_url" in settings %}
        <stream-url>{{ settings.stream_url }}</stream-url>
{% endif %}
{%      if "description" in settings %}
        <stream-description>{{ settings.description }}</stream-description>
{%      endif %}
{%      if "intro" in settings %}
        <intro>{{ settings.intro }}</intro>
{%      endif %}
{%      if "dump_file" in settings %}
        <dump-file>/tmp/dump-example1.ogg</dump-file>
{%      endif %}
{%      if "fallback_mount" in settings %}
        <fallback-mount>{{ settings.fallback_mount }}</fallback-mount>
        <fallback-override>1</fallback-override>
        <fallback-when-full>{{ settings.fallback_when_full | default(false) | int }}</fallback-when-full>
{%      endif %}
        <charset>{{ settings.charset | default("UTF-8") }}</charset>
{%      if "bitrate" in settings %}
        <bitrate>{{ settings.bitrate }}</bitrate>
{%      endif %}
        <mp3-metadata-interval>{{ settings.metadata_interval | default(16384) }}</mp3-metadata-interval>
{%      if "http_headers" in settings %}
        <http-headers>
{%      for header_name, header_value in settings.http_headers | default({})%}
                <header name="{{ header_name }}" value="{{ header_value }}" />
{%      endfor %}
        </http-headers>
{% endif %}
{#
        <!--
        <hidden>0</hidden>
        <public>0/public>
        <max-listeners>1</max-listeners>
        <burst-size>65536</burst-size>
        <on-connect>/home/icecast/bin/stream-start</on-connect>
        <on-disconnect>/home/icecast/bin/stream-stop</on-disconnect>
        -->
#}
    </mount>
{% endfor %}

    <!--
    <mount type="normal">
        <mount-name>/auth_example.ogg</mount-name>
        <authentication type="url">
            <option name="mount_add"       value="http://myauthserver.net/notify_mount.php"/>
            <option name="mount_remove"    value="http://myauthserver.net/notify_mount.php"/>
            <option name="listener_add"    value="http://myauthserver.net/notify_listener.php"/>
            <option name="listener_remove" value="http://myauthserver.net/notify_listener.php"/>
            <option name="headers"         value="x-pragma,x-token"/>
            <option name="header_prefix"   value="ClientHeader."/>
        </authentication>
    </mount>
    -->

    <fileserve>1</fileserve>

    <paths>
        <!-- basedir is only used if chroot is enabled -->
        <basedir>/usr/share/icecast2</basedir>

        <!-- Note that if <chroot> is turned on below, these paths must both
             be relative to the new root, not the original root -->
        <logdir>/var/log/icecast2</logdir>
        <webroot>/usr/share/icecast2/web</webroot>
        <adminroot>/usr/share/icecast2/admin</adminroot>
        <!-- <pidfile>/usr/share/icecast2/icecast.pid</pidfile> -->

        <!-- Aliases: treat requests for 'source' path as being for 'dest' path
             May be made specific to a port or bound address using the "port"
             and "bind-address" attributes.
          -->
        {% if icecast_baseurl != "/" -%}
        <!--
        <alias source="{{ icecast_baseurl }}" destination="/"/>
        -->
        {% endif -%}
        <!-- Aliases: can also be used for simple redirections as well,
             this example will redirect all requests for http://server:port/ to
             the status page
        -->
        <alias source="/" destination="/status.xsl"/>
        <!-- The certificate file needs to contain both public and private part.
             Both should be PEM encoded.
        <ssl-certificate>/usr/share/icecast2/icecast.pem</ssl-certificate>
        -->
    </paths>

    <logging>
        {% if icecast_access_log_enabled -%}
        <accesslog>access.log</accesslog>
        {% endif -%}
        <errorlog>error.log</errorlog>
        {% if icecast_playlist_log_enabled -%}
        <playlistlog>playlist.log</playlistlog>
        {% endif -%}
        <loglevel>3</loglevel> <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
        <logsize>10000</logsize> <!-- Max size of a logfile -->
        <!-- If logarchive is enabled (1), then when logsize is reached
             the logfile will be moved to [error|access|playlist].log.DATESTAMP,
             otherwise it will be moved to [error|access|playlist].log.old.
             Default is non-archive mode (i.e. overwrite)
        -->
        <!-- <logarchive>1</logarchive> -->
    </logging>

    <security>
        <chroot>0</chroot>
        <!--
        <changeowner>
            <user>nobody</user>
            <group>nogroup</group>
        </changeowner>
        -->
    </security>

    {% if icecast_stdinpcm_enabled -%}
    <input>
        <module>stdinpcm</module>
        <param name="rate">44100</param>
        <param name="channels">2</param>
        <param name="metadata">1</param>
        <param name="metadatafilename">/home/ices/metadata</param>
    </input>
    {% endif %}

</icecast>
