map $http_upgrade $connection_upgrade {
    default upgrade;
    #default $http_connection;
    ''      close;
}
server {
    listen 443 ssl http2;
    {% if inventory_hostname in wg_clients -%}
    listen {{ wg_clients[inventory_hostname].ip }}:443 ssl http2;
    {% endif -%}

    # include listen-proxy-protocol.conf;
    include /etc/nginx/authelia_internal.conf;
    include /etc/nginx/sudo-known.conf;

    server_name {{ zwavejs_url }};

    location / {
        include /etc/nginx/require_auth.conf;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # nuke cache
        add_header Last-Modified $date_gmt always;
        add_header Cache-Control 'no-store' always;
        if_modified_since off;
        expires off;
        etag off;

        # nuke the service worker cache
        # sub_filter '.js' '.js?id=$request_id';
        # sub_filter_types '*';
        # sub_filter_once off;
        if ($is_args = '') {
            rewrite ^(.*).js$ "$1.js?id=$request_id" redirect;
        }

        ## for the special dashboard
        ## https://zwave-js.github.io/zwave-js-ui/#/usage/reverse-proxy?id=using-an-http-header
        #proxy_set_header X-External-Path "/";
        proxy_set_header X-External-Path $http_x_ingress_path;

        proxy_pass http://{{ bridgewithdns.zwavejs }}:8091;

        add_header "zwave" "true";
    }

    location /_zigbee/ {
        include /etc/nginx/require_auth.conf;

        sub_filter '/static/' '/_zigbee/static/';
        sub_filter_types '*';
        sub_filter_once off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #rewrite ^/_zigbee(/.*)$ $1 last;

        proxy_redirect https://$host/ https://$host/_zigbee/;
        proxy_pass http://{{ bridgewithdns.hass_zigbee }}:8633/;

        location /_zigbee/api {
            proxy_set_header Host $host;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_http_version 1.1;
            proxy_pass http://{{ bridgewithdns.hass_zigbee }}:8633/api;
        }
    }

    access_log /var/log/nginx/access_{{ zwavejs_url }}.log main;
    error_log /var/log/nginx/error_{{ zwavejs_url }}.log warn;

    ssl_session_timeout 5m;
    ssl_certificate /usr/local/etc/certs/{{ domain }}/fullchain.pem;
    ssl_certificate_key /usr/local/etc/certs/{{ domain }}/privkey.pem;

    fastcgi_hide_header X-Powered-By;
}
