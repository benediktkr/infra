#!/usr/bin/python3

"""data from: https://daten.berlin.de/datensaetze/covid-19-berlin-verteilung-den-bezirken
"""

from datetime import datetime, timezone
import sys
import json

import requests
from influxdb import InfluxDBClient
from loguru import logger

logger.remove()
logger.add(
    "{{ userlist[myusername].home }}/berlinrona-api.log",
    format="{time}${message}",
    filter=lambda r: "api" in r["extra"],
    rotation="50 MB",
    compression="zip"
)
logger.add(
    "{{ userlist[myusername].home }}/berlinrona-datapoints.log",
    format="{message}",
    filter=lambda r: "datapoint" in r["extra"],
    rotation="50 MB",
    compression="zip"
)

url = "https://www.berlin.de/lageso/gesundheit/infektionsepidemiologie-infektionsschutz/corona/tabelle-bezirke/index.php/index/all.json?q="

if __name__ == "__main__":

    time = datetime.utcnow().replace(tzinfo=timezone.utc).isoformat()

    r = requests.get(url)
    r.raise_for_status()
    j = r.json()
    logger.bind(api=True).info(j)

    points = []
    for item in j['index']:
        point = {
            'measurement': 'coronavirus',
            'tags': {
                'bezirk': item['bezirk']
            },
            'time': time,
            'fields': {
                'recovered': int(item['genesen']),
                'cases':  int(item['fallzahl']),
                'incidence': float(item['inzidenz']),
                'diff': float(item['differenz'])
            }
        }
        logger.bind(datapoint=True).info(point)
        points.append(point)
        if "-v" in sys.argv:
            print(point['tags']['bezirk'], point['fields'])

    client = InfluxDBClient(
        host='{{ influxdb_url }}',
        port=443,
        username='berlinrona',
        password="{{ influxdb_user_database['berlinrona'] }}",
        ssl=True,
        verify_ssl=True,
        database='berlinrona')

    client.write_points(points, time_precision='h')
