---
- name: add ssh hostkey for git into global ssh_known_hosts
  lineinfile:
    path: /etc/ssh/ssh_known_hosts
    line: "{{ item }}"
    create: yes
  with_items:
    - "{{ github_hostkey }}"
    - "{{ sudo_hostkey }}"

- name: create dir structure
  file:
    path: "{{ dotfiles_path }}"
    state: directory
    mode: 0750
    owner: "{{ myusername }}"
    group: "{{ myusername }}"

- name: pull my dotfiles repo
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_path }}/dotfiles"
    version: master
    clone: yes
    update: yes
    force: yes
  become_user: "{{ myusername }}"
  register: gitpull

- name: check if the dotfiles repo is managed in ~/projects/dotfiles
  stat:
    path: "~{{ myusername }}/projects/dotfiles"
  register: projects_dotfiles

- name: put my dotfiles in place if dotfiles repo isnt human-managed
  copy:
    remote_src: yes
    src: "{{ dotfiles_path }}/dotfiles/{{ item.src }}"
    dest: "~/{{ item.dest }}"
  with_items:
    - "{{ dotfiles }}"
  become_user: "{{ myusername }}"
  when:
    - gitpull.changed
    - not projects_dotfiles.stat.exists

- name: put dotfiles for root in place
  copy:
    remote_src: yes
    src: "{{ dotfiles_path }}/dotfiles/{{ item.src }}"
    dest: "/root/{{ item.dest }}"
    owner: root
    group: root
  with_items:
    - "{{ dotfiles }}"
  when:
    - gitpull.changed
    - item.root

- name: rm dotfiles that root should not have
  file:
    path: "{{ dotfiles_path }}/dotfiles/{{ item.src }}"
    state: absent
  with_items:
    - "{{ dotfiles }}"
  when:
    - not item.root
