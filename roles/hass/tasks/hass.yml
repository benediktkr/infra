---

- name: copy ssh keys for {{ hass_config_repo_name }}
  template:
    src: "private/sshkeys/{{ item }}"
    dest: "{{ systemuserlist.hass.home }}/.ssh/{{ item }}"
    owner: "{{ systemuserlist.hass.uid }}"
    group: "{{ systemuserlist.hass.gid }}"
    mode: 0600
  no_log: true
  with_items:
    - "{{ hass_config_repo_name }}"
    - "{{ hass_config_repo_name }}.pub"
  tags:
    - hass-git

# hass + zwave

- name: create dir structure
  file:
    path: "{{ systemuserlist.hass.home }}/{{ item.name }}"
    state: directory
    mode: "{{ item.mode | default('0755') }}"
    owner: hass
    group: hass
  tags:
    - hass-dirs
  loop_control:
    label: "{{ item.name }}"
  with_items:
    - name: .local
      mode: "0775"
    - name: home-assistant
    - name: home-assistant/config
    - name: home-assistant/config/packages
    - name: home-assistant/config/python_scripts
    - name: home-assistant/config/bvg
    - name: home-assistant/.config # might not be needed, misread 'cache' as 'config'
    - name: home-assistant/.cache
    - name: home-assistant/media
      mode: "0775"
    - name: zwavejs
    - name: zwavejs/app
    - name: zwavejs/app/store
    - name: git

- name: template gitconfig
  template:
    src: gitconfig.j2
    dest: "{{ systemuserlist.hass.home }}/.gitconfig"
    owner: "{{ systemuserlist.hass.uid }}"
    group: "{{ systemuserlist.hass.gid }}"
    mode: 0644
  tags:
    - hass-git

- name: set up the {{ hass_config_repo_name }} repo
  git:
    repo: "{{ hass_config_repo }}"
    dest: "{{ systemuserlist.hass.home }}/git/{{ hass_config_repo_name }}"
    version: main
    clone: true
    update: false
    force: false
    accept_newhostkey: true
    key_file: "{{ systemuserlist.hass.home }}/.ssh/{{ hass_config_repo_name }}"
  become_user: "{{ systemuserlist.hass.username }}"
  tags:
    - hass-git
    - hass-git-clone

- name: home assistant config files
  template:
    src: "{{ item }}.j2"
    dest: "{{ systemuserlist.hass.home }}/home-assistant/config/{{ item }}"
    owner: "{{ systemuserlist.hass.uid }}"
    group: "{{ systemuserlist.hass.gid }}"
    mode: 0644
  notify: restart hass container
  with_items:
    - secrets.yaml
    - configuration.yaml
    - templates.yaml
    - automations-ansible-managed.yaml
    - scripts-ansible-managed.yaml
    - blink1.yaml
    # - packages/climate.yaml
    - packages/toothbrush.yaml
  tags:
    - hass-config

- name: copy config files
  copy:
    src: "{{ item }}"
    dest: "{{ systemuserlist.hass.home }}/home-assistant/config/{{ item }}"
    mode: 0644
    owner: "{{ systemuserlist.hass.uid }}"
    group: "{{ systemuserlist.hass.gid }}"
  notify: restart hass container
  with_items:
    - packages/usb_led_strings.yaml
    - packages/grow_lights.yaml
    - packages/fans.yaml
  tags:
    - hass-config

- name: copy dashboard config files
  copy:
    src: "private/hass/{{ item }}"
    dest: "{{ systemuserlist.hass.home }}/home-assistant/config/{{ item }}"
    mode: 0644
    owner: "{{ systemuserlist.hass.uid }}"
    group: "{{ systemuserlist.hass.gid }}"
  notify: restart hass container
  with_items:
    - mini.yaml
    - ui-test.yaml
    - card_room.yaml
  tags:
    - hass-config

- name: install git sync script
  template:
    src: git-hass-config.sh.j2
    dest: /usr/local/bin/git-hass-config.sh
    mode: 0775
    owner: hass
    group: hass
  tags:
    - hass-git

- name: cron file
  template:
    src: hass-cron.j2
    dest: /etc/cron.d/hass
    owner: root
    group: root
    mode: 0640
  tags:
    - cron
    - hass-cron
    - hass-git

- name: udev rules
  template:
    src: "{{ item }}.j2"
    dest: /etc/udev/rules.d/{{ item }}
    owner: root
    group: root
    mode: 0644
  notify: udevadm reload rules
  with_items:
    - 20-sdr.rules
  tags:
    - hass-udev

# key source:
# - http://download.ag-projects.com/agp-debian-gpg.key
# - http://download.ag-projects.com/agp-debian-key.key
# gpg --enarmor roles/hass/files/agp-debian-gpg.key
# binary keys: .gpg
# ascii armor: .asc (or .key?)
- name: add apt key for sip tools
  copy:
    src: "{{ item }}"
    dest: /etc/apt/trusted.gpg.d/{{ item }}
    owner: root
    group: root
    mode: "0644"
  with_items:
    - agp-debian-gpg.asc
    - agp-debian-key.asc
  tags:
    - packages
    - hass-sip
    - sip

# - debug:
#     msg: "deb [signed-by=/usr/share/keyrings/agp-debian-gpg.key] http://ag-projects.com/{{ ansible_lsb.id | lower }} {{ ansible_lsb.codename }} main"
#   tags: hass-sip

# [signed-by=/usr/share/keyrings/agp-debian-gpg.gpg]
# [signed-by=/etc/apt/trusted.gpg.d/agp-debian-gpg.asc]
- name: add repo for sip tools
  apt_repository:
    #repo: "{{ item }} [signed-by=/etc/apt/trusted.gpg.d/agp-debian-key.asc] http://ag-projects.com/{{ ansible_lsb.id | lower }} {{ ansible_lsb.codename }} main"
    repo: "{{ item }} [signed-by=/etc/apt/trusted.gpg.d/agp-debian-key.asc] http://ag-projects.com/{{ ansible_lsb.id | lower }} sid main"
    state: present
    update_cache: false
  with_items:
    - "deb"
    - "deb-src"
  register: sip_repo
  tags:
    - packages
    - hass-sip
    - sip
  when: false

- name: update apt if new repo was added
  apt:
    update_cache: true
  tags:
    - packages
    - hass-sip
    - sip
  when:
    - sip_repo.changed
    - false

  # the host needs to have bluez installed for the container to use bluetooth
- name: install packages
  apt:
    name:
      - vlc
      - mplayer
      - bluez
      - bluetooth
      - espeak-ng     # for glados-tts
      - fapg
      - podget
      - sqlite3
      - rtl-433
      - mosquitto
      - python3-paho-mqtt
      - blink1  # git.sudo.is/ben/build-blink1
      # # sip tools
      # - python3-sipsimple
      # - sipclients3
    state: latest
  tags:
    - packages
    - hass-bluetooth
    - hass-packages
    - hass-sip
    - sip

- name: ensure bluetooth service is started and enabled
  service:
    name: bluetooth
    state: started
    enabled: true
  tags:
    - hass-bluetooth

# docker run --run -it -p 8091:8091 -p 3000:3000 --network
#bridgewithdns --device /dev/ttyACM0:/dev/zwave -v
# /home/ben/zwavejs:/usr/src/app/store zwavejs/zwavejs2mqtt:latest

# the name has changed to zwave-js-ui:
# https://github.com/zwave-js/zwave-js-ui/pull/2650
- name: start zwavejs container
  docker_container:
    name: zwavejs
    image: zwavejs/zwave-js-ui:latest
    detach: true
    pull: true
    restart_policy: "unless-stopped"
    state: "{{ hass_container_state | default('stopped') }}"
    container_default_behavior: compatibility
    user: "{{ systemuserlist.hass.uid }}:dialout"
    networks_cli_compatible: false
    network_mode: bridgewithdns
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.zwavejs }}"
    devices:
      - "/dev/serial/by-id/usb-0658_0200-if00:/dev/zwave:rwm"
    ports:
      # ws for hass<->zwavejs
      # hass is configured to use localhost:3000 to talk to zwavejs, but can
      # also use {{ bridgewithdns.zwavejs }}, but hass is very fragile and
      # you have to manually work around it if it cant access zwaevjs because
      # the ip/dns changed or the container moved networks. it is not
      # configured in a config file either. so using localhost is the least
      # fragile strategy.
      - "127.0.0.1:3000:3000"
    env:
      #BASE_URL: "/zwavejs/"
      SESSION_SECRET: "{{ zwavejs_session_secret }}"
      ZWAVEJS_EXTERNAL_CONFIG: /usr/src/app/store/.config-db
      SERVER_SSL: "true"
    mounts:
      - type: bind
        source: "{{ systemuserlist.hass.home }}/zwavejs/app/store"
        target: /usr/src/app/store
  register: zwavejs_container
  tags:
    - zwavejs
    - zwavejs-container
    - hass-container
    - docker-containers

# docker run --rm it --name hass -p 8123:8123 -e TZ=Etc/UTC -v
# /home/ben/hass:/config --network=bridgewithdns
# ghcr.io/home-assistant/home-assistant:stable

- name: start home-assistant container
  docker_container:
    name: hass
    #image: ghcr.io/home-assistant/home-assistant:stable
    image: git.sudo.is/ben/hass:latest
    detach: true
    pull: true
    restart_policy: "unless-stopped"
    state: "{{ hass_container_state | default('stopped') }}"
    container_default_behavior: compatibility
    user: "{{ systemuserlist.hass.uid }}:{{ systemuserlist.hass.gid }}"
    network_mode: host
    privileged: true
    capabilities:
      - SYS_ADMIN
      - NET_ADMIN
    env:
      TZ: "Etc/UTC"
    mounts:
      - type: bind
        source: "{{ systemuserlist.hass.home }}/home-assistant/config"
        target: /config
      - type: bind
        source: "{{ systemuserlist.hass.home }}/home-assistant/.config"
        target: /.config
      - type: bind
        source: "{{ systemuserlist.hass.home }}/home-assistant/.cache"
        target: /.cache
      - type: bind
        source: "{{ systemuserlist.hass.home }}/.local"
        target: /.local
      - type: bind
        source: "{{ systemuserlist.hass.home }}/home-assistant/media"
        target: /usr/var/media
      - type: bind
        read_only: true
        source: "{{ systemuserlist.archives.home }}/podgrab/data"
        target: /usr/var/media/podcasts
      - type: bind
        read_only: false
        source: /run/dbus
        target: /run/dbus
      # - type: bind
      #   source: /etc/bluetooth/main.conf
      #   target: /etc/bluetooth/main.conf
      #   read_only: true
      # scripts from role: common
      # only depends on requests, which hass image has
      - type: bind
        source: /usr/local/bin/authelia-auth.py
        target: /usr/local/bin/authelia-auth.py
      - type: bind
        source: /usr/local/bin/matrixmsg.py
        target: /usr/local/bin/matrixmsg.py
  tags:
    - home-assistant
    - home-assistant-container
    - hass-container
    - docker-containers
  register: hass_container

- name: install certs
  copy:
    src: "/usr/local/etc/letsencrypt/live/{{ item }}"
    dest: "/usr/local/etc/certs/"
    owner: root
    group: root
    mode: 0755
  tags:
    - letsencrypt-certs
  notify: reload nginx
  vars:
    prediff_cmd: echo
  with_items:
    - "{{ domain }}"

- name: template nginx vhosts for hass and friends
  template:
    src: "01-{{ item }}.conf.j2"
    dest: /etc/nginx/sites-enabled/{{ item }}.conf
    owner: root
    group: root
    mode: 0644
  with_items:
    - hass
    - zwavejs
  tags:
    - nginx
    - hass-nginx
    - zwave-nginx
  notify: reload nginx

# different task because its better for the hass config to restart nginx
- name: template nginx vhost for grafana-proxy
  template:
    src: 01-grafana-proxy.j2
    dest: /etc/nginx/sites-enabled/01-grafana
    owner: root
    group: root
    mode: 0644
  tags:
    - nginx
    - grafana-proxy-nginx
  notify: reload nginx
