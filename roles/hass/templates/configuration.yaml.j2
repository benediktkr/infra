# ansible: roles/hass/templates/configuration.yaml.j2
#
# Loads default set of integrations. Icluding the cloud crap. Do remove.
# havent gotten it to work wthough, hass doesnt load properly
default_config:
#
# the dict contains this:
# https://github.com/home-assistant/core/blob/dev/homeassistant/components/default_config/manifest.json
#
# the cloud thing clistens on (at least) port 42161.
# since we need to run in host mode, and dont have network/port isolation by default
# we'll kill this stuff.
#
# for some reason the settings dialog for it is still at /config/cloud/login, but
# we arent listening on port 42161 anymore (yay!). (but hass doesnt start)
#
# for now we just block the ports with iptables/ufw
#
# config:
#   application_credentials:
#   automation:
#   bluetooth:
#   # there is no cloud, just other peoples computers..
#   #cloud:
#   counter:
#   dhcp:
#   energy:
#   frontend:
#   hardware:
#   history:
#   homeassistant_alerts:
#   input_boolean:
#   input_button:
#   input_datetime:
#   input_number:
#   input_select:
#   input_text:
#   logbook:
#   map:
#   media_source:
#   mobile_app:
#   my:
#   network:
#   person:
#   scene:
#   schedule:
#   script:
#   ssdp:
#   # kind of undocumented, but didnt help
#   stream:
#   sun:
#   system_health:
#   tag:
#   timer:
#   usb:
#   webhook:
#   zeroconf:
#   zone:

automation ui: !include automations.yaml
automation ansible: !include automations-ansible-managed.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
template: !include templates.yaml
#climate: !include climate.yaml

# Text to speech
tts:
  - platform: voicerss
    api_key: !secret voicerss_api_key
  - platform: google_translate
  - platform: picotts
    language: "en-GB"

calendar:
  {% for item in hass_caldav.calendars -%}
  - platform: caldav
    days: 30
    username: !secret caldav_user
    password: !secret caldav_passwd
    # {{ item.name | trim }}
    url: {{ item.url | trim }}
  {% endfor %}

http:
  server_host: 127.0.0.1
  server_port: 8123
  trusted_proxies:
    - 127.0.0.1
  use_x_forwarded_for: true

api:

frontend:
  themes: !include_dir_merge_named themes

panel_custom:
  - name: zwave
    sidebar_title: Z-Wave
    sidebar_icon: mdi:z-wave
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/devices/dashboard?historyBack=1&config_entry=d6e38621854098348266029e18f93048'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: automations
    sidebar_title: Automations
    sidebar_icon: mdi:robot
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/automation/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: scripts
    sidebar_title: Scripts
    sidebar_icon: mdi:script
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/script/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: integrations
    sidebar_title: Integrations
    sidebar_icon: mdi:integrated-circuit-chip
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator


{% set zone = {'zone': hass_zones} %}
{{ zone | to_nice_yaml }}


homeassistant:
  auth_providers:
    - type: command_line
      command: /usr/local/bin/authelia-auth.py
      args:
        - {{ hass_url }}
  name: Home
  currency: EUR
  unit_system: metric
  time_zone: "Europe/Berlin"
  country: DE
  external_url: https://{{ hass_url }}
  internal_url: https://{{ hass_url }}
  allowlist_external_dirs:
    - "/usr/var/media"
  allowlist_external_urls:
    - "https://{{ static_url }}"
    - "https://{{ hass_notflix_url }}"
  media_dirs:
    media: "/usr/var/media"
  customize:
    zone.home:
      friendly_name: S21
  packages: !include_dir_named packages

lovelace:
  mode: storage
  dashboards:
    lovelace-yaml:
      mode: yaml
      title: Mini
      icon: mdi:view-dashboard
      show_in_sidebar: true
      require_admin: false
      filename: mini.yaml
    lovelace-yaml2:
      mode: yaml
      title: Test
      icon: mdi:view-dashboard
      show_in_sidebar: true
      require_admin: false
      filename: ui-test.yaml

  {# resources:
   #   - url: /config/custom_components/ui_lovelace_minimalist/cards/button-card/button-card.js
   #     type: module
   #   - url: /config/custom_components/ui_lovelace_minimalist/cards/button-card/button-card.js
   #     type: module #}

recorder:
  purge_keep_days: 3
  exclude:
    entity_globs:
      - binary_sensor.1066d799*
      - sensor.1066d799*
      - light.1066d799*


sensor:
  # https://www.home-assistant.io/integrations/dwd_weather_warnings/
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/warning_codes_pdf.pdf?__blob=publicationFile&v=5
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/cap_warncellids_csv.html
  # 111000000;Berlin;DE300;Berlin;BXX
  # 711000002;Berlin - Friedrichshain-Kreuzberg;;B-Friedrh./Kbg.;BXB
  # 711000003;Berlin - Pankow;;B-Pankow;BXG
  # 711000011;Berlin - Lichtenberg;;B-Lichtenberg;BXC
  # 811000000;Stadt Berlin;;Berlin;
  # 911000000;Berlin;;Land Berlin;LBE
  # 911100000;Berlin;;Berlin;BXZ
  # 995000000;Brandenburg/Berlin;;Berlin/Brandenb;DWPD

  - platform: dwd_weather_warnings
    # Berlin - Friedrichshain-Kreuzberg
    region_name: 711000002

  - platform: dwd_weather_warnings
    # Berlin - Pankow
    region_name: 711000003

  - platform: dwd_weather_warnings
    # Stadt Berlin
    region_name: 811000000

  {% for item in hass_bvg -%}
  - platform: bvg_berlin_public_transport
    name: {{ item.name }}
    stop_id: "{{ item.stop_id }}"
    direction: {{ item.direction | trim }}
    {% if item.walking_distance is defined -%}
    walking_distance: {{ item.walking_distance | trim }}
    {% endif -%}
    file_path: "/config/bvg/"
  {% endfor %}

  - platform: worldclock
    time_zone: UTC
    name: UTC
  - platform: worldclock
    time_zone: Atlantic/Reykjavik
    name: Iceland
  - platform: worldclock
    time_zone: Europe/Berlin
    name: Berlin
  - platform: worldclock
    time_zone: America/New_York
    name: Boston
  - platform: worldclock
    time_zone: America/Chicago
    name: Austin



  - platform: waqi
    token: !secret waqi_token
    locations:
      {% for item in hass_waqi.locations -%}
      - "{{ item | trim }}"
      {%- endfor +%}
    {#stations:
      #{% for item in hass_waqi.stations -%}
      #- "{{ item | trim }}"
      #{% endfor %}
      #}

  {% if blink1_enabled -%}
  - platform: rest
    resource: http://localhost:{{ blink1_server_port }}/blink1
    name: blink1
    json_attributes:
      - rgb
      - bright
    value_template: "{%raw%}{{ value_json.rgb }}{%endraw%}"
  {% endif %}

binary_sensor:
  - platform: workday
    country: DE
    workdays: [mon, tue, wed, thu, fri]
    excludes: [sat, sun, holiday]

  {% for radiator in hass_radiators -%}
  {% if 'status' in radiator -%}
  - platform: threshold
    entity_id: sensor.radiator_{{ radiator.name }}_last_updated
    # defined in templates.yaml
    name: radiator_{{ radiator.name }}_reporting
    # minutes
    lower: 10
  {% endif -%}
  {% endfor -%}
  {% for target in hass_ping -%}
  - platform: ping
    name: ping_{{ target.name }}
    host: {{ target.host }}
    count: {{ target.count | default('1') }}
    scan_interval: {{ target.interval_secs | default('30') }}
  {% endfor %}

input_select:
  heating_mode_test:
    name: Heating Mode Test
    options:
      - "auto"
      - "heat"
      - "cool"
      - "off"
    initial: "off"
    icon: mdi:thermometer-lines


input_number:
  heating_setpoint_test:
    name: Heating Setpoint Test
    icon: mdi:home-thermometer
    initial: 0
    min: 0
    max: 35
    step: 0.5

input_text:
  {% for linux_tracker in hass_linux_presence_trackers -%}
  webhook_{{ linux_tracker.name }}:
    name: webhook_{{ linux_tracker.name }}
    icon: "mdi:laptop"
    initial: "inactive"
    pattern: "^active|inactive$"
  {% endfor %}

device_tracker:
  - platform: bluetooth_le_tracker
    # device tracker will only look for the following global settings
    # under the configuration of the first configured platform
    interval_seconds: 12
    consider_home: 120
    # setting this to 'false' still results in new devices being added
    # to known_devices.yaml when they are discovered, but they wont be
    # tracked unless 'track' is set to 'true' for a device there (edit
    # the file to track a discovered device).
    track_new_devices: true
    #new_device_defaults:
    #  track_new_devices: false

  - platform: bluetooth_tracker
    request_rssi: true
    track_new_devices: true
  - platform: ping
    # these are probably not used, because they are "global settings"
    # and only the first values from the first platform (bluetooth_le_tracker)
    # are used according to the docs
    interval_seconds: 30
    track_new_devices: true
    # but consider_hoem can be overridden
    consider_home: 120
    hosts:
      {% for target in hass_ping -%}
      {% if target.device_tracker|default(true) -%}
      ping_{{ target.name }}: {{ target.host }}
      {% endif -%}
      {% endfor %}


influxdb:
  host: "{{ influxdb_url }}"
  port: 443
  database: hass
  username: hass
  password: !secret influxdb_pass
  ssl: true
  verify_ssl: true
  max_retries: 3
  default_measurement: state
  include:
    entities:
       - sensor.washing_machine_electric_consumption_w
       - sensor.washing_machine_electric_consumption_kwh
  tags:
    instance: prod
    source: hass
    home: S21

matrix:
  homeserver: https://{{ matrix_url }}
  username: !secret matrix_username
  password: !secret matrix_password
  rooms: !secret matrix_rooms
  commands:
    - word: hass
      name: hass

notify:
  - name: matrix
    platform: matrix
    default_room: !secret matrix_default_room
  - name: pagerduty
    platform: smtp
    sender: hass@{{ domain }}
    recipient:
      - !secret smtp_recipient_email
    server: !secret smtp_server
    port: {{ smtp_port_starttls }}
    username: !secret smtp_username
    password: !secret smtp_passwd
    encryption: starttls
    sender_name: "{{ hass_url }}"

shell_command:
  matrixmsg: /usr/local/bin/matrixmsg.py

rest_command:
  {% if blink1_enabled -%}
  blink1_turn_on:
    url: {{ hass_blink1_url }}/blink1/on?bright=250
    #url: http://localhost:{{ blink1_server_port }}/blink1/fadeToRGB?rgb=ff0ff
    method: GET
    content_type: "application/json"
  blink1_turn_off:
    url: {{ hass_blink1_url }}/blink1/off
    method: GET
    content_type: "application/json"
  blink1_turn_magenta:
    url: {{ hass_blink1_url }}/blink1/fadeToRGB?rgb=ff00ff
    method: GET
    content_type: "application/json"
  blink1_set_color:
    url: "{{ hass_blink1_url }}/blink1/fadeToRGB?rgb={%raw%}{{ rgb }}{%endraw%}"
    method: GET
  {% endif %}

light:
  {% if blink1_enabled -%}
  - platform: template
    lights:
      blink1: !include blink1.yaml
  {% endif %}

{#
 # feedreader:
 #   urls:
 #   {% for item in hass_feedreader -%}
 #     - "{{ item.url | trim }}"
 #   {% endfor %}
 #}

logger:
  default: warning
  logs:
    pyatv: debug
    homeassistant.components.apple_tv: debug

# enable SVT play
svt_play:
