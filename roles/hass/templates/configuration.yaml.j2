# ansible: roles/hass/templates/configuration.yaml.j2
#
# Loads default set of integrations. Icluding the cloud crap. Do remove.
# havent gotten it to work wthough, hass doesnt load properly
default_config:
#
# the dict contains this:
# https://github.com/home-assistant/core/blob/dev/homeassistant/components/default_config/manifest.json
#
# the cloud thing clistens on (at least) port 42161.
# since we need to run in host mode, and dont have network/port isolation by default
# we'll kill this stuff.
#
# for some reason the settings dialog for it is still at /config/cloud/login, but
# we arent listening on port 42161 anymore (yay!). (but hass doesnt start)
#
# for now we just block the ports with iptables/ufw
#
# config:
#   application_credentials:
#   automation:
#   bluetooth:
#   # there is no cloud, just other peoples computers..
#   #cloud:
#   counter:
#   dhcp:
#   energy:
#   frontend:
#   hardware:
#   history:
#   homeassistant_alerts:
#   input_boolean:
#   input_button:
#   input_datetime:
#   input_number:
#   input_select:
#   input_text:
#   logbook:
#   map:
#   media_source:
#   mobile_app:
#   my:
#   network:
#   person:
#   scene:
#   schedule:
#   script:
#   ssdp:
#   # kind of undocumented, but didnt help
#   stream:
#   sun:
#   system_health:
#   tag:
#   timer:
#   usb:
#   webhook:
#   zeroconf:
#   zone:
# mysql://user:password@SERVER_IP:ALTERNATE_PORT/DB_NAME?charset=utf8mb4
automation ui: !include automations.yaml
automation ansible: !include automations-ansible-managed.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
template: !include templates.yaml
#climate: !include climate.yaml

device_tracker:
  # - platform: bluetooth_tracker
  #   #request_rssi: true
  #   track_new_devices: true
  #   new_device_defaults:
  #     track_new_devices: true
  - platform: bluetooth_le_tracker
    # device tracker will only look for the following global settings
    # under the configuration of the first configured platform
    interval_seconds: 12
    consider_home: 120
    # setting this to 'false' still results in new devices being added
    # to known_devices.yaml when they are discovered, but they wont be
    # tracked unless 'track' is set to 'true' for a device there (edit
    # the file to track a discovered device).
    track_new_devices: false
    track_battery: false
    new_device_defaults:
      track_new_devices: false

  - platform: ping
    # these are probably not used, because they are "global settings"
    # and only the first values from the first platform (bluetooth_le_tracker)
    # are used according to the docs
    # interval_seconds: 30
    # track_new_devices: true
    # # but consider_hoem can be overridden
    # consider_home: 120
    hosts:
      {% for target in hass_ping -%}
      ping_{{ target.name }}: {{ target.host }}
      {% endfor %}


homeassistant:
  auth_providers:
    - type: command_line
      command: /usr/local/bin/authelia-auth.py
      args:
        - {{ hass_url }}
    - type: homeassistant
  name: Home
  currency: EUR
  unit_system: metric
  time_zone: "Europe/Berlin"
  country: DE
  external_url: https://{{ hass_url }}
  internal_url: https://{{ hass_url }}
  allowlist_external_dirs:
    - "/usr/var/media"
  allowlist_external_urls:
    - "https://{{ static_url }}"
    - "https://{{ hass_notflix_url }}"
  media_dirs:
    media: "/usr/var/media"
  packages: !include_dir_named packages
  customize:
    sensor.mariadb_database_size:
      friendly_name: MariaDB hass DB size
      package: configuration
    sensor.mariadb_database_size_hourly:
      friendly_name: MariaDB hass DB size mb/hour
      package: configuration
    sensor.mariadb_database_size_daily:
      friendly_name: MariaDB hass DB size mb/day
      package: configuration

http:
  server_host: 127.0.0.1
  server_port: 8123
  trusted_proxies:
    - 127.0.0.1
  use_x_forwarded_for: true

api:
websocket_api:
wake_on_lan:
# /api/prometheus
# default: all entities are included
prometheus:

system_log:
  fire_event: true

{% set zones = {'zone': hass_zones.values() | list } -%}
{% set zones_yaml = zones | to_nice_yaml(indent=2) -%}
{{ zones_yaml | indent(2) | trim }}

# Text to speech
tts:
  - platform: voicerss
    api_key: !secret voicerss_api_key
  - platform: google_translate
  - platform: picotts
    language: "en-GB"

{% if hass_caldav | length > 0 -%}
calendar:
  {% for item in hass_caldav -%}
  # {{ item.name }}
  - platform: caldav
    url: {{ item.url | trim }}
    {% if 'username_secret' in item -%}
    username: !secret {{ item.username_secret | trim }}
    password: !secret {{ item.passwd_secret | trim }}
    {% endif -%}
    {# this can filter for events and create binary_sensor's for matches #}
    {# custom_calendars: [] #}

  {% endfor %}
{% endif %}

frontend:
  themes: !include_dir_merge_named themes

panel_custom:
  - name: zwave
    sidebar_title: Z-Wave
    sidebar_icon: mdi:z-wave
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/zwave_js'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: esphome
    sidebar_title: ESPHome
    sidebar_icon: mdi:car-esp
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/esphome'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: vaccum_robot
    sidebar_title: Valetudo
    sidebar_icon: mdi:robot-vacuum
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/devices/device/1bda4ef775ea71dd7477102faec7c094'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: sonos
    sidebar_title: Sonos
    sidebar_icon: mdi:speaker
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/sonos'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: apple_tv
    sidebar_title: Apple TV
    sidebar_icon: mdi:apple
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/apple_tv'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: met_no
    sidebar_title: met.no
    sidebar_icon: mdi:cloud-question
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/met'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: open_meteo
    sidebar_title: Open-Meteo
    sidebar_icon: mdi:cloud-question
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/open_meteo'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: logs
    sidebar_title: Logs
    sidebar_icon: mdi:file
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/logs'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: automations
    sidebar_title: Automations
    sidebar_icon: mdi:robot
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/automation/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: scripts
    sidebar_title: Scripts
    sidebar_icon: mdi:script
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/script/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: integrations
    sidebar_title: Integrations
    sidebar_icon: mdi:integrated-circuit-chip
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: entities
    sidebar_title: Entities
    sidebar_icon: mdi:clover
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/entities'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator

lovelace:
  mode: storage
  dashboards:
    lovelace-yaml:
      mode: yaml
      title: Mini
      icon: mdi:view-dashboard
      show_in_sidebar: true
      require_admin: false
      filename: mini.yaml
    lovelace-yaml2:
      mode: yaml
      title: Test
      icon: mdi:view-dashboard
      show_in_sidebar: true
      require_admin: false
      filename: ui-test.yaml

recorder:
  db_url: mysql://{{ systemuserlist.hass.username }}:@localhost/{{ systemuserlist.hass.username }}?charset=utf8mb4&unix_socket=/run/mysqld/mysqld.sock
  auto_purge: true
  auto_repack: true
  purge_keep_days: 30
  exclude:
    entities:
      - sensor.esphmoe_ble_names
      - sensor.esphome_ble_names
      - sensor.ble_proxy_json_ble_scanner
      - sensor.austin
      - sensor.boston
      - sensor.iceland
      - sensor.utc
      - sensor.berlin
      - sensor.button_pressed_event_context_id
      - sensor.time
      - sensor.date
      - sensor.date_time
      - sensor.date_time_utc
      - sensor.date_time_iso
      - sensor.time_date
      - sensor.ptime_utc
      - binary_sensor.morning_alarm_is_today
      - sensor.morning_alarm_next
      - sensor.morning_alarm_next_wihout_offset
      - sensor.sorted_motion_last_changed
    entity_globs:
      - sensor.uptime_*
      - sensor.*_uptime
      - sensor.unifi_uptime_*
      - sensor.esphome_uptime_*
      - sensor.*_adc_a0
      - sensor.*_adc_*
      - sensor.rssi_*
      - sensor.*_rssi
      - sensor.*_ble_scanner
      - sensor.*_json_ble_scanner

      #- "device_tracker.*_*_*_*_*_*"

sql:
  - name: mariadb_database_size
    query: 'SELECT table_schema "{{ systemuserlist.hass.username }}", ROUND(SUM(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="{{ systemuserlist.hass.username}}" GROUP BY table_schema;'
    column: "value"
    device_class: data_size
    unit_of_measurement: MB

# ping_motion_hallway_west
# firmware_motion_hallway_west
# idle_tamper_motion_hallway_west
# idle_motion_hallway_west
# battery_level_motion_hallway_west
# node_status_motion_hallway_west
# illuminance_motion_hallway_west
# air_temparature_hallway_west_motion
# basic_motion_hallway_north
# sensor_status_motion_bedroom_east
# tamper_motion_bedroom_east
# seismic_intensity_motion_study_north

sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
  - platform: derivative
    source: sensor.mariadb_database_size
    name: mariadb_database_size_hourly
    round: 2
    unit_time: h
    time_window: "01:00:00"
  - platform: derivative
    source: sensor.mariadb_database_size
    name: mariadb_database_size_daily
    round: 2
    unit_time: d
    time_window: "24:00:00"

  # YAML config was removed :(
  # https://www.home-assistant.io/integrations/dwd_weather_warnings/
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/warning_codes_pdf.pdf?__blob=publicationFile&v=5
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/cap_warncellids_csv.html
  # 111000000;Berlin;DE300;Berlin;BXX
  # 711000002;Berlin - Friedrichshain-Kreuzberg;;B-Friedrh./Kbg.;BXB
  # 711000003;Berlin - Pankow;;B-Pankow;BXG
  # 711000011;Berlin - Lichtenberg;;B-Lichtenberg;BXC
  # 811000000;Stadt Berlin;;Berlin;
  # 911000000;Berlin;;Land Berlin;LBE
  # 911100000;Berlin;;Berlin;BXZ
  # 995000000;Brandenburg/Berlin;;Berlin/Brandenb;DWPD
  #
  #- platform: dwd_weather_warnings
  #  # Berlin - Friedrichshain-Kreuzberg
  #  region_name: 711000002
  #
  #- platform: dwd_weather_warnings
  #  # Berlin - Pankow
  #  region_name: 711000003
  #
  #- platform: dwd_weather_warnings
  #  # Stadt Berlin
  #  region_name: 811000000

  - platform: worldclock
    time_zone: UTC
    name: UTC
  - platform: worldclock
    time_zone: Atlantic/Reykjavik
    name: Iceland
  - platform: worldclock
    time_zone: Europe/Berlin
    name: Berlin
  - platform: worldclock
    time_zone: America/New_York
    name: Boston
  - platform: worldclock
    time_zone: America/Chicago
    name: Austin

  - platform: waqi
    token: !secret waqi_token
    locations:
      {% for item in hass_waqi.locations -%}
      - "{{ item | trim }}"
      {%- endfor +%}
    {#stations:
      #{% for item in hass_waqi.stations -%}
      #- "{{ item | trim }}"
      #{% endfor %}
      #}

input_select:
  heating_mode_test:
    name: Heating Mode Test
    options:
      - "auto"
      - "heat"
      - "cool"
      - "off"
    initial: "off"
    icon: mdi:thermometer-lines


input_number:
  heating_setpoint_test:
    name: Heating Setpoint Test
    icon: mdi:home-thermometer
    initial: 0
    min: 0
    max: 35
    step: 0.5

{# input_boolean:
 #   {% for linux_tracker in hass_linux_presence_trackers -%}
 #   webhook_{{ linux_tracker.name }}_last_state:
 #     name: webhook_{{ linux_tracker.name }}_last_state
 #     icon: "mdi:laptop"
 #   {% endfor %} #}


influxdb:
  host: "{{ influxdb_url }}"
  port: 443
  database: hass
  username: hass
  password: !secret influxdb_pass
  ssl: true
  verify_ssl: true
  max_retries: 3
  default_measurement: state
  include:
    entities:
       - sensor.washing_machine_electric_consumption_w
       - sensor.washing_machine_electric_consumption_kwh
  tags:
    instance: prod
    source: hass
    home: S21

matrix:
  homeserver: https://{{ matrix_url }}
  username: !secret matrix_username
  password: !secret matrix_password
  rooms: !secret matrix_rooms
  commands:
    - word: hass
      name: hass

digital_ocean:
  access_token: !secret do_token

notify:
  - name: matrix
    platform: matrix
    default_room: !secret matrix_default_room
  - name: pagerduty
    timeout: 60
    platform: smtp
    sender: hass@{{ domain }}
    recipient:
      - !secret smtp_recipient_email
    server: !secret smtp_server
    port: {{ smtp_port_starttls }}
    username: !secret smtp_username
    password: !secret smtp_passwd
    encryption: starttls
    sender_name: "{{ hass_url }}"

shell_command:
  matrixmsg: /usr/local/bin/matrixmsg.py

logger:
  default: warning
  logs:
    pyatv: warning
    homeassistant.components.apple_tv: warning

# enable SVT play
svt_play:

sonos:
  # useful for not using docker host networking
  # and for avoiding auto discovery in general
  media_player:
    # tells the sonos devices how to reach hass
    advertise_addr: {{ local_ip }}
    # tells hass how to reach the sonos speakers
    #hosts:
    #  - sonos-bedroom.{{ inventory_hostname.split('.')[1:] | join(".") }}
    #  - sonos-hallway.{{ inventory_hostname.split('.')[1:] | join(".") }}
    #  - sonos-study.{{ inventory_hostname.split('.')[1:] | join(".") }}
    #  - sonos-kitchen.{{ inventory_hostname.split('.')[1:] | join(".") }}
    #  - sonos-livingroom.{{ inventory_hostname.split('.')[1:] | join(".") }}

{# media_player:
 #   - platform: mpd
 #     host: audio.{{ domain }}
 #     name: mpdtone #}

{# mqtt:
 #   sensor:
 #     - state_topic: rtl_433/+/events #}
