#!/bin/bash

set -e

NAME_REPO="{{ hass_config_repo_name }}"

PATH_REPO="{{ systemuserlist.hass.home }}/git/${NAME_REPO}"
PATH_HASS="{{ systemuserlist.hass.home }}/home-assistant"

export GIT_SSH_COMMAND="ssh -i ~/.ssh/${NAME_REPO}"

cd $PATH_REPO

if test -n "$(git status --porcelain)" ; then
    echo "repo is dirty"
    git status --short
    exit 2
fi

if ! grep -q "secrets.y[a]ml" ${PATH_REPO}/.gitignore; then
    echo "'secrets.yaml' missing from '.gitconfig'"
    exit 3
fi

mkdir -p ${PATH_REPO}/config/
mkdir -p ${PATH_REPO}/config/.storage

{% for item in hass_config_repo_cp_files -%}
cp -a ${PATH_HASS}/config/{{ item }} ${PATH_REPO}/config/{{ item }}
{% endfor %}

{% for item in hass_config_repo_cp_dirs -%}
cp -ra ${PATH_HASS}/config/{{ item }} ${PATH_REPO}/config/
{% endfor %}

{% for item in hass_config_repo_cp_globs -%}
{% set dest_dir = item.split('/')[:-1] | join("/") %}
cp -ra ${PATH_HASS}/config/{{ item }} ${PATH_REPO}/config/{{ dest_dir }}
{% endfor %}

set +e

{% for item in hass_config_repo_rm -%}
git rm -rf ${PATH_REPO}/config/{{ item }} &> /dev/null
{% endfor %}

set -e
if test -n "$(git status --porcelain)" ; then
    git add config/ > /dev/null
    git commit -m "config updated" > /dev/null
fi

git pull --quiet
git push origin main --quiet 2> /dev/null
#git push test main --force


# TODO: copy changes from git
