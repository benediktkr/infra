---

substitutions:
  id_prefix: "{{ item.name.replace('-', '_') }}"

esphome:
  name: "{{ item.name }}"
  name_add_mac_suffix: false
  #friendly_name: BLE Monitor
  #project:
  #  name: esphome.bluetooth-proxy
  #  version: "1.0"

esp32:
  board: nodemcu-32s

logger:

api:
  password: "{{ hass_esphome_api_password }}"

ota:
  password: "{{ hass_esphome_ota_password }}"

wifi:
  ssid: "{{ hass_esphome_wifi_ssid }}"
  password: "{{ hass_esphome_wifi_password }}"
  domain: .{{ inventory_hostname.split('.')[1:] | join('.') }}
  # use_address:

  ap:
    # ssid:
    password: "{{ hass_esphome_fallback_wifi_password }}"

mdns:
  disabled: true

captive_portal:

web_server:
  port: 80

esp32_ble_tracker:

binary_sensor:
{% for ble_device in hass_esphome_ble_presence %}
{% set ble_device_id = ble_device.name.lower().replace(' ', '_').replace('-', '_').replace("'","").replace('.', '_') %}
  - platform: ble_presence
    {% if 'ibeacon_uuid' in ble_device -%}
    ibeacon_uuid: {{ ble_device.ibeacon_uuid }}
    {% else -%}
    mac_address: {{ ble_device.mac }}
    {% endif -%}
    name: "BLE {{ ble_device.name }}"
    id: "ble_{{ ble_device_id }}"
    filters:
      - delayed_off: "{{ ble_device.delay_off | default('5min') }}"

{% endfor %}

  - platform: status
    name: "ESHome status"
    entity_category: "diagnostic"
    id: ${id_prefix}_status

sensor:
{% for ble_device in hass_esphome_ble_presence %}
{% if ble_device.track_rssi|default(false) %}
{% set ble_device_id = ble_device.name.lower().replace(' ', '_').replace('-', '_').replace("'", "").replace('.', '_') %}
  - platform: ble_rssi
    {% if 'ibeacon_uuid' in ble_device -%}
    ibeacon_uuid: {{ ble_device.ibeacon_uuid }}
    {% else -%}
    mac_address: {{ ble_device.mac }}
    {% endif -%}
    name: "RSSI {{ ble_device.name }}"
    id: "ble_{{ ble_device_id }}_rssi"
    internal: true
    filters:
      - throttle: 900s

  - platform: copy
    source_id: "ble_{{ ble_device_id }}_rssi"
    name: "Signal {{ ble_device.name }}"
    id: "ble_{{ ble_device_id }}_signal"
    unit_of_measurement: "%"
    device_class: power_factor
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
{% endif %}
{% endfor %}

  # ESPHome
  - platform: internal_temperature
    name: "ESP Temperature"

  - platform: wifi_signal
    internal: true
    name: "WiFi signal strength"
    id: ${id_prefix}_wifi_signal_strength
    update_interval: 60s
    entity_category: "diagnostic"
    unit_of_measurement: "dBm"
    filters:
      - throttle: 900s

  - platform: copy
    source_id: ${id_prefix}_wifi_signal_strength
    name: "WiFi signal"
    unit_of_measurement: "%"
    device_class: power_factor
    entity_category: "diagnostic"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);

switch:
  - platform: restart
    name: "Reboot"
    icon: mdi:power-cycle
    id: ${id_prefix}_reboot

button:
  - platform: wake_on_lan
    name: "Wake-on-LAN TV Livingroom"
    target_mac_address: {{ s21_mac_samsung_tv }}

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP address"
      entity_category: "diagnostic"
    ssid:
      name: "SSID"
      entity_category: "diagnostic"
    mac_address:
      name: "WiFi mac address"
      entity_category: "diagnostic"
    dns_address:
      name: "DNS address"
      entity_category: "diagnostic"
  - platform: version
    id: ${id_prefix}_version
    entity_category: "diagnostic"
    name: "ESPHome version"



# from esphome/bluetooth-proxies/esp32-generic.yaml, see https://esphome.io/components/improv_serial.html
# improv_serial:
