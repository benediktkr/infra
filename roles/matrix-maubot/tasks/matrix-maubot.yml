---
- name: make dirs
  file:
    path: "{{ systemuserlist.matrix.home }}/{{ item.name }}"
    state: directory
    mode: "{{ item.mode|default(750) }}"
    owner: "{{ item.owner|default('matrix') }}"
    group: "{{ item.group|default('matrix') }}"
  with_items:
    - name: maubot
    - name: maubot/log
    - name: maubot/log/maubot
    - name: maubot/postgresql
      owner: 70
      mode: 700
    - name: maubot/dotlocal
    - name: maubot/dotcache
    - name: maubot/data
    - name: maubot/data/plugins
    - name: maubot/data/trash
    - name: maubot/data/dbs
    - name: maubot/data/crypto

- name: template matrix-maubot config
  template:
    src: maubot-config.yaml.j2
    dest: "{{ systemuserlist.matrix.home }}/maubot/data/config.yaml"
    owner: matrix
    group: matrix
    mode: 0640

- name: template better run.sh file
  template:
    src: maubot-docker-run.sh.j2
    dest: "{{ systemuserlist.matrix.home }}/maubot/docker-run.sh"
    owner: matrix
    group: matrix
    mode: 0750

#  $ docker exec -u 0 -t matrix-maubot-postgresql psql --user maubot
#  psql (12.6)
#  Type "help" for help.
#
#  maubot=# UPDATE client SET device_id='{{ device_id }}' WHERE id='@{{ user }}:{{ domain }}';
#  UPDATE 1
#  maubot=# UPDATE client SET access_token='{{ token }}' WHERE id='@{{ user }}:{{ domain }}'

# $ docker exec -it matrix-maubot mbc auth
# ? Homeserver
# ? Username
# ? Password  ********************************
# Successfully logged in as
# Access token:
# Device ID:

- name: postgres container for matrix-maubot
  docker_container:
    name: matrix-maubot-postgresql
    state: started
    image: docker.io/postgres:12-alpine
    container_default_behavior: compatibility
    restart_policy: "unless-stopped"
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
    env:
      POSTGRES_USER: "maubot"
      POSTGRES_PASSWORD: "{{ matrix_maubot_sql_pass }}"
      # ensure the database gets created correctly
      # https://github.com/matrix-org/synapse/blob/master/docs/postgres.md#set-up-database
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    mounts:
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/maubot/postgresql"
        target: /var/lib/postgresql/data
  tags:
    - matrixmaubot-container
    - docker-containers

- name: start matrix-maubot
  docker_container:
    name: matrix-maubot
    image: dock.mau.dev/maubot/maubot:latest
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "unless-stopped"
    state: started
    container_default_behavior: compatibility
    user: "{{ systemuserlist.matrix.uid }}:{{ systemuserlist.matrix.gid }}"
    env:
      UID: "{{ systemuserlist.matrix.uid }}"
      GID: "{{ systemuserlist.matrix.gid }}"
    networks_cli_compatible: no
    network_mode: bridgewithdns
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.matrix_maubot }}"
    mounts:
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/maubot/data"
        target: /data
        read_only: no
        # /var/log is empty in a fresh container so this is ok
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/maubot/log"
        target: /var/log
        read_only: no
        # so is /.local
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/maubot/dotlocal"
        target: /.local
        read_only: no
        # custom and sane and super simple entrypoint script
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/maubot/docker-run.sh"
        target: /usr/local/bin/docker-run.sh
        read_only: no

    # working around su-exec (and using dockers -u instead)
    command: /usr/local/bin/docker-run.sh
  tags:
    - matrix-maubot-container
    - docker-containers
