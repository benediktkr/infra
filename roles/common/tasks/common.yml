---
- name: set hostname
  hostname:
    name: "{{ item }}"
    use: systemd
  with_items:
    - "{{ inventory_hostname }}"
  tags:
    - hostname

- name: Set timezone to Europe/Berlin
  timezone:
    name: Europe/Berlin
  tags:
    - timezone

- name: update apt packages and cache
  apt:
    update_cache: yes
    upgrade: dist
  changed_when: False
  tags:
    - packages

- name: install python3
  apt:
    name:
      - python3
      - python3-pip
      - python3-apt
      - python3-setuptools
      - python3-venv
      - python3-dev
      - python-setuptools
  tags:
    - packages
    - python3

- name: correct python3 version selected on ubuntu
  alternatives:
    name: python3
    path: /usr/bin/python3.8
    link: /usr/bin/python3
  tags:
    - packages
    - alternatives
  when: ansible_distribution == "Ubuntu"

- name: install packages
  apt:
    state: latest
    name:
      - autoconf # emacs-build
      - texinfo  # emacs-build
      - gnutls-bin # emacs-build
      - libgnutls28-dev # emacs-build
      - pkg-config # emacs-build
      - libncurses-dev # emacs-build
      - apt-transport-https
      - aptitude
      - lsb-release
      - lsb-base
      - at
      - cmake    # emacs vterm
      - libtool  # emacs vterm
      - libtool-bin
      - build-essential
      - ca-certificates
      - cbm
      - cryptsetup
      - curl
      - irssi
      - dnsutils
      - git
      - gnupg2
      - procmail
      - acl
      - sshfs
      - file
      - haveged
      - htop
      - netcat
      - tcpdump
      - iotop
      - iptraf
      - jq
      - kpcli
      - libffi-dev
      - libssl-dev
      - lsof
      - lvm2
      - molly-guard
      - mtr
      - ncdu
      - nethogs
      - nmap
      #- ntp
      - openssh-server
      - openssl
      #- python-netaddr
      - rsync
      - smartmontools
      - sudo
      - tmux
      - unzip
      - ipcalc
      - vnstat
      - whois
      - zsh
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  tags:
    - packages

- name: remove packages
  apt:
    name:
      - update-motd
      - landscape-client
      - landscape-common
    state: absent
  tags: packages

- name: remove ntp package (systemd...)
  apt:
    name: ntp
    state: absent
    purge: yes
  tags:
    - ntp

- name: set ntp servers
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    line: "NTP=0.pool.ntp.org 1.pool.ntp.org 2.pool.ntp.org 3.pool.ntp.org"
    create: no
  notify:
    - systemctl daemon reload
    - restart systemd-timesyncd
  tags: ntp

- name: enable systemd-timesyncd
  service:
    name: systemd-timesyncd
    enabled: yes
    state: started
  tags: ntp

- name: enable ntp
  command: timedatectl set-ntp true
  changed_when: false
  tags: ntp

- name: check if hosts file needs fixing
  command: grep {{ inventory_hostname }} /etc/hosts
  register: grephosts
  tags: etchosts
  failed_when: grephosts.rc >= 2
  changed_when: grephosts.rc != 0

- name: fix hosts file
  lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ inventory_hostname }}"
    create: no
  tags: etchosts
  ignore_errors: yes  # fails in --check
  when: grephosts.rc != 0

- name: disable password authentication
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication(?: yes| no)$'
    replace: 'PasswordAuthentication no'
  tags:
    - ssh
  notify:
    - reload sshd

- name: disable challengeresponse authentication
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication(?: yes| no)$'
    replace: 'ChallengeResponseAuthentication no'
  tags:
    - ssh
  notify:
    - reload sshd

- name: empty /etc/motd
  copy:
    content: ""
    dest: /etc/motd
    force: yes

- name: disable update-motd on ubuntu
  file:
    dest: /etc/update-motd.d/
    mode: 0600
    recurse: yes
  when: ansible_distribution == "Ubuntu"

- name: install unattended-upgrades
  apt:
    name: unattended-upgrades
    state: present
    update_cache: yes
  when: unatt_enabled|bool
  tags:
    - unatt
    - packages

- name: install pip packages
  pip:
    name:
      - ansible
      - poetry
      - netaddr
      - certbot
    executable: pip3
  tags:
    - pip
    - packages

- name: install zmq pip package
  pip:
    name: zmq
    executable: pip3
  tags:
    - pip
    - packages
  when: zmq_install

# TODO: Decide on which way...
- name: enable unattended-upgrades (following codenames)
  template:
    src: "{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
  with_items:
    - 50unattended-upgrades
    - 20auto-upgrades
  when: unatt_enabled|bool
  tags:
    - unatt
