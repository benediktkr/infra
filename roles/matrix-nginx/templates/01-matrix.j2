server {
  listen 443 ssl http2;

  {% if inventory_hostname in wg_clients -%}
  listen {{ wg_clients[inventory_hostname].ip }}:443 ssl http2;
  {% endif -%}

  ## For the federation port (not needed according to logs)
  # listen 8448 ssl http2 default_server;

  # ipv6
  #listen [::]:443 ssl http2;
  #listen [::]:8448 ssl http2 default_server;

  server_name {{ matrix_url }};

  root {{ systemuserlist.matrix.home }}/html/;

  client_body_buffer_size 1024m;
  proxy_max_temp_file_size 0;

  location = /.well-known/matrix/client {
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
    return 200 '{"m.homeserver":{"base_url":"https://{{ matrix_url }}"}}';
  }
  location = /.well-known/matrix/server {
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
    return 200 '{"m.server": "{{ matrix_url }}"}';
  }


  location /health {
    allow 127.0.0.1;
    allow {{ my_public_ips[inventory_hostname] }}/32;
    allow {{ my_public_ips[ansible_control_host] }}/32;
    allow {{ wireguard_cidr }};
    deny all;
    proxy_pass http://{{ bridgewithdns.matrix }}:{{ matrix_synapse_port }};
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;

  }
  location ~* ^(\/_matrix|\/_synapse\/client) {
    proxy_pass http://{{ bridgewithdns.matrix }}:{{ matrix_synapse_port }};
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;


    # Nginx by default only allows file uploads up to 1M in size
    # Increase client_max_body_size to match max_upload_size defined
    # in homeserver.yaml
    client_max_body_size {{ matrix_upload_size }};
  }

  location ~ ^/(static|register) {
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_pass http://{{ bridgewithdns.matrix_reg }}:{{ matrix_registration_port }};
  }

  location /_webhook {
    proxy_pass http://10.102.47.128:3033/_webhook;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
  }

  location /hydrogen {
    alias /usr/local/share/hydrogen-web/;
    charset utf-8;
    index index.html;
    autoindex off;
  }


  include /etc/nginx/authelia_internal.conf;
  location /_synapse/admin {
    include /etc/nginx/require_auth.conf;

    proxy_pass http://{{ bridgewithdns.matrix }}:{{ matrix_synapse_port }};
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
  }
  location /_a/ {
    include /etc/nginx/require_auth.conf;
    include /etc/nginx/require_auth_proxy.conf;
    proxy_pass http://{{ bridgewithdns.matrix_admin }}:80/;
  }

  location /_telegram/public {
      proxy_pass http://{{ bridgewithdns.matrix_telegram }}:{{ matrix_telegram_port }};
  }

  ssl_certificate /usr/local/etc/certs/{{ matrix_url }}/fullchain.pem;
  ssl_certificate_key /usr/local/etc/certs/{{ matrix_url }}/privkey.pem;

  access_log /var/log/nginx/access_{{ matrix_url }}.log main;
  error_log /var/log/nginx/error_{{ matrix_url }}.log warn;

}

{# server {
 #   listen 443 ssl http2;
 #
 #   server_name {{ matrix_maubot_url }};
 #
 #   location /_matrix/maubot/v1/logs {
 #     proxy_pass http://{{ bridgewithdns.matrix_maubot }}:29316;
 #     proxy_http_version 1.1;
 #     proxy_set_header Upgrade $http_upgrade;
 #     proxy_set_header Connection "Upgrade";
 #     proxy_set_header X-Forwarded-For $remote_addr;
 #   }
 #
 #   location /_matrix/maubot {
 #     proxy_pass http://{{ bridgewithdns.matrix_maubot }}:29316;
 #     proxy_set_header X-Forwarded-For $remote_addr;
 #   }
 # } #}


server {
    listen 443 ssl http2;
    {% if inventory_hostname in wg_clients -%}
    listen {{ wg_clients[inventory_hostname].ip }}:443 ssl http2;
    {% endif -%}

    server_name {{ element_url }};

    location / {
        proxy_pass         http://{{ bridgewithdns.element }};

        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $scheme;

   }

    access_log /var/log/nginx/access_{{ element_url }}.log main;
    error_log /var/log/nginx/error_{{ element_url }}.log warn;

    ssl_session_timeout 5m;
    ssl_certificate /usr/local/etc/certs/{{ element_url }}/fullchain.pem;
    ssl_certificate_key /usr/local/etc/certs/{{ element_url }}/privkey.pem;

    add_header Referrer-Policy "no-referrer" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Robots-Tag "none" always;
    add_header X-XSS-Protection "1; mode=block" always;
}
