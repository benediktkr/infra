server {
   listen 80;

   return 301 https://$host$request_uri;
}

server {
    #listen 444 ssl;

    {# {% if ansible_default_ipv4.address is defined -%}
     # listen {{ ansible_default_ipv4.address }}:443 ssl;
     # {% endif %} #}


    add_header Server "";
    add_header Connection "";

    #listen {{ ansible_default_ipv4.address }}:443 ssl;
    listen 443 ssl;
    # listen 443 ssl http2;
    # listen {{ owntone_port_tcp }};

    {% if inventory_hostname in wg_clients -%}
    listen {{ wg_clients[inventory_hostname].ip }}:443 ssl http2;
    {% endif -%}

    # include listen-proxy-protocol.conf;
    include /etc/nginx/authelia_internal.conf;
    include /etc/nginx/sudo-known.conf;

    server_name {{ owntone_url }};

    access_log /var/log/nginx/access_{{ owntone_url }}.log main;
    error_log /var/log/nginx/error_{{ owntone_url }}.log warn;

    ssl_certificate /usr/local/etc/certs/{{ domain }}/fullchain.pem;
    ssl_certificate_key /usr/local/etc/certs/{{ domain }}/privkey.pem;

    # !
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    {# location /client {
     #     alias /var/www/owntone/htdocs/;
     # }
     # location ~ "^/client/api/(.*)$" {
     #     return 307 '/api/$1';
    # } #}


    location /bonob {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        proxy_pass http://{{ bridgewithdns.bonob }}:{{ bonob_port }};
    }
    location /navidrome {
        # uses proxy auth
        include /etc/nginx/require_auth.conf;
        include /etc/nginx/require_auth_proxy.conf;


        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_buffering off;

        proxy_pass http://{{ bridgewithdns.navidrome }}:4533;
    }

    root /var/www/owntone/htdocs;
    location /ws {
         proxy_pass http://127.0.0.1:{{ owntone_port_ws }}/;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
    }
    location / {
        {# sub_filter 'owntone.local:3689' '{{ owntone_url }}';
         # sub_filter 'http%3A%2F%2Fowntone.local%3A3689' 'https%3A%2F%2F{{ owntone_url }}';
         # sub_filter 'http://owntone.local:3689' 'https://{{ owntone_url }}';
         # sub_filter_types '*';
         # sub_filter_once off; #}

        proxy_pass http://127.0.0.1:{{ owntone_port_tcp }}$request_uri;
        proxy_http_version 1.1;

        proxy_set_header Host {{ owntone_url }};
        #proxy_set_header Host "owntone.local:3689";
        #proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
server {
     #if ($scheme = "http") {
     #    return 301 https://{{ owntone_url }}:{{ owntone_port_ws }}$request_uri;
     #}

     #if ($scheme = "ws") {
     #    return 301 wss://{{ owntone_url }}:{{ owntone_port_ws }}$request_uri;
     #}

     {% if ansible_default_ipv4.address is defined -%}
     listen {{ ansible_default_ipv4.address }}:{{ owntone_port_ws }} ssl;
     # When turning ssl back on, also remember to uncomment proxy_set_header
     #listen {{ ansible_default_ipv4.address }}:{{ owntone_port_ws }};
     {% endif %}

     #listen {{ ansible_default_ipv4.address }}:{{ owntone_port_ws }} ssl;
     #listen {{ owntone_port_ws }} ssl;


     server_name {{ owntone_url }};

     access_log /var/log/nginx/access_{{ owntone_url }}_{{ owntone_port_ws }}.log main;
     error_log /var/log/nginx/error_{{ owntone_url }}_{{ owntone_port_ws }}.log warn;

     ssl_certificate /usr/local/etc/certs/{{ domain }}/fullchain.pem;
     ssl_certificate_key /usr/local/etc/certs/{{ domain }}/privkey.pem;

     # !!
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_prefer_server_ciphers off;

     location / {
         proxy_pass http://127.0.0.1:{{ owntone_port_ws }}/;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
     }

}
