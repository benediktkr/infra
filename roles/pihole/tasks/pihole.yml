---

- name: template nginx vhost
  template:
    src: pihole-vhost.j2
    dest: /etc/nginx/sites-enabled/01-pihole-vhost
    validate: /usr/sbin/nginx -t
  tags:
    - nginx-config
    - nginx-vhosts
    - pihole-nginx
  notify: reload nginx

- name: create dir structure
  file:
    path: "{{ pihole_root }}/{{ item['dir'] }}"
    state: directory
    mode: 0775
    owner: "{{ item['owner'] | default('999') }}"
    group: "{{ item['group'] | default('999') }}"
  with_items:
    - { dir: "etc/pihole" }
    - { dir: "etc/dnsmasq.d" }
  tags: docker
  register: piholedocker

- name: template dns overrides
  template:
    src: custom.list.j2
    dest: "{{ pihole_root }}/etc/pihole/custom.list"
    owner: root
    group: root
    mode: 0644
  tags:
    - pihole-config
    - pihole-overrides

- name: template dhcp options if dhcp server
  template:
    src: 07-dhcp-options.conf.j2
    dest: "{{ pihole_root }}/etc/dnsmasq.d/07-dhcp-otions.conf"
    owner: root
    group: root
    mode: 0644
  tags:
    - pihole-config
  when: pihole_dhcp

- name: disable systemd-resolved or named if they are active
  service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  with_items:
    - systemd-resolved
    - named

- name: enable null blocking
  lineinfile:
    path: "{{ pihole_root}}/etc/pihole/pihole-FTL.conf"
    line: "BLOCKINGMODE=NULL"
    create: true

# NOTE: For a DNS server with lots of short-lived connections, you may
# wish to consider adding --net=host to the run command for
# performance reasons.
- name: start unbound docker containers
  docker_container:
    name: "{{ item }}"
    image: mvance/unbound:latest
    auto_remove: false
    pull: true
    restart_policy: "always"
    state: started
    mounts:
      - type: bind
        read_only: true
        source: /dev/null
        target: /opt/unbound/etc/unbound/forward-records.conf
    container_default_behavior: compatibility
    networks_cli_compatible: false
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns[item] }}"
    dns_servers:
      - 127.0.0.1
  tags:
    - unbound-container
    - docker-containers
  with_items:
    - unbound0
    - unbound1


- name: start docker container
  docker_container:
    name: "pihole"
    image: "pihole/pihole:{{ pihole_version | default('latest') }}"
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "always"
    state: started
    container_default_behavior: compatibility
    capabilities:
      - NET_ADMIN
      - NET_RAW
      - NET_BIND_SERVICE
    env:
      WEB_PORT: "{{ pihole_http_port|string }}"
      DNSMASQ_LISTENING: "all" # the docker nat port forward is a firewall
      VIRTUAL_HOST: "{{ pihole_url }}"
      # ServerIP: "{{ pihole_local_ip }}" # can disable wg0
      TZ: "Europe/Berlin"
      WEBPASSWORD: "{{ pihole_web_password }}"
      DNS1: "{{ bridgewithdns.unbound0 }}"
      DNS2: "{{ bridgewithdns.unbound1 }}"
      CONDITIONAL_FORWARDING: "{{ pihole_cond|string }}"
      CONDITIONAL_FORWARDING_IP: "{{ pihole_cond_ip }}"
      CONDITIONAL_FORWARDING_DOMAIN: "{{ pihole_cond_domain }}"
      IPv6: "false"
    dns_servers:
      - "{{ bridgewithdns.unbound0 }}"
      - "{{ bridgewithdns.unbound1 }}"
    ports:
      - 127.0.0.1:53:53/udp
      - 127.0.0.1:53:53/tcp
      - "{{ pihole_nginx_interface }}:53:53/udp"
      - 127.0.0.1:{{pihole_http_port}}:{{pihole_http_port}}
    network_mode: bridge
    purge_networks: yes
    networks_cli_compatible: yes
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.pihole }}"
    volumes:
      - "{{ pihole_root }}/etc/pihole:/etc/pihole"
      - "{{ pihole_root }}/etc/dnsmasq.d:/etc/dnsmasq.d"
  tags:
    - pihole-container
    - docker-containers

- name: wait for port 53
  wait_for:
    port: 53
    host: localhost
    sleep: 4
  tags: pihole-container
