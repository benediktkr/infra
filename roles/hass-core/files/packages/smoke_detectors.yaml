---

  # {% set node_statuses = states | selectattr("entity_id", "match", "sensor.node_status_smoke") | map(attribute="entity_id") | list %}
  # {{ node_statuses }}:
  #   ['sensor.node_status_smoke_hallway', 'sensor.node_status_smoke_bedroom']

  # {% set node_states = node_statuses | map("states") | list %}
  # {{ node_states }}:
  #   ['alive', 'asleep']

  # {% set ok_states = ["alive", "asleep"] %}
  # {{ node_status_entity_ids | reject("is_state", ok_states) | list }}:
  #   [] (empty list if all are ok)
  #   ['sensor.node_status_$name'] (if $name is not in 'ok_states')

  # get area name:
  # {{ node_status_entity_ids | reject("is_state", ok_states) | map("area_name") | list }}:
  #   ['Bedroom'] (for example)

  #   can go into oneliner.. also 'map("device_entities")'
  #   used in smoke alarm monitoring automation


homeassistant:
  customize:
    package.node_anchors:
      package_name: &package_name "smoke_detectors"
      common_attrs: &common_attrs
        package: *package_name
      common_attrs_templated: &common_attrs_templated
        templated: true
        <<: *common_attrs
      zwave: &zwave
        proto: "Z-Wave"
        <<: *common_attrs

    binary_sensor.tamper_smokealarm_bedroom:
      friendly_name: "smokealarm_bedroom Tamper"
      device_class: tamper
      note: |
        Works correctly and updates state, despite group 2 (TMP button) is
        not added.
      <<: *zwave
    light.smokealarm_bedroom_basic:
      default_groups:
        - 3 (Device status)
      note: |
        Added groups 1 (Fire status) and 2 (TMP Button), reinterviewed and this
        entity showed up.

        Would get updated if the value of "Basic v1" was updated in Z-Wave JS, and
        the updated value would show there as well.

        Removed groups 1 and 2 again. Now this entity does not update if the "Basic
        v1" value is changed in Z-Wave JS and gets set back to "0".

        But 'binary_sensor.tamper_smokealarm_bedroom' still works, and changes state
        if the cover is removed or put back.
      <<: *zwave
    binary_sensor.smoke_hallway:
      friendly_name: "Hallway Smoke alarm"
      device_class: smoke
      <<: *zwave
    binary_sensor.smoke_bedroom:
      friendly_name: "smokealarm_bedroom Smoke state"
      device_class: smoke
      <<: *zwave


template:
  - binary_sensor:
      - name: dead_smoke_detectors
        device_class: problem
        availability: >-
          {{ state_attr(this.entity_id, "failed_areas") is defined }}
        state: >-
          {% set a = state_attr(this.entity_id, "failed_areas") or [] %}
          {{ a | length > 0 }}
        attributes:
          failed areas: >-
            {% set ok_states = ["alive", "asleep"] %}
            {{ states | selectattr("entity_id", "match", "sensor.node_status_smoke") | map(attribute="entity_id") | reject("is_state", ok_states) | map("area_name") | list }}

homeassistant:
  customize:
    binary_sensor.dead_smoke_detectors:
      friendly_name: "Dead smoke detectors"
      package: smoke_detectors
      templated: true
