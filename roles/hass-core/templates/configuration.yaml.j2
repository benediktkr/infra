# ansible: roles/hass/templates/configuration.yaml.j2
#
# Loads default set of integrations. Icluding the cloud crap. Do remove.
# havent gotten it to work wthough, hass doesnt load properly
default_config:
#
# the dict contains this:
# https://github.com/home-assistant/core/blob/dev/homeassistant/components/default_config/manifest.json
#
# the cloud thing clistens on (at least) port 42161.
# since we need to run in host mode, and dont have network/port isolation by default
# we'll kill this stuff.
#
# for some reason the settings dialog for it is still at /config/cloud/login, but
# we arent listening on port 42161 anymore (yay!). (but hass doesnt start)
#
# for now we just block the ports with iptables/ufw
#
# config:
#   application_credentials:
#   automation:
#   bluetooth:
#   # there is no cloud, just other peoples computers..
#   #cloud:
#   counter:
#   dhcp:
#   energy:
#   frontend:
#   hardware:
#   history:
#   homeassistant_alerts:
#   input_boolean:
#   input_button:
#   input_datetime:
#   input_number:
#   input_select:
#   input_text:
#   logbook:
#   map:
#   media_source:
#   mobile_app:
#   my:
#   network:
#   person:
#   scene:
#   schedule:
#   script:
#   ssdp:
#   # kind of undocumented, but didnt help
#   stream:
#   sun:
#   system_health:
#   tag:
#   timer:
#   usb:
#   webhook:
#   zeroconf:
#   zone:
# mysql://user:password@SERVER_IP:ALTERNATE_PORT/DB_NAME?charset=utf8mb4
automation ui: !include automations.yaml
automation ansible: !include automations-ansible-managed.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
template: !include templates.yaml
#climate: !include climate.yaml

device_tracker:
  # using this one for now: https://github.com/andriilahuta/hass-dbus-bluetooth-tracker/
  # uses dbus, no autodiscovery (yay)
  - platform: dbus_bluetooth_tracker
    interval_seconds: 15
    seen_interval_seconds: 60
    consider_home: 90
  #- platform: bluetooth_tracker
  #  #request_rssi: true
  #  track_new_devices: true
  #  new_device_defaults:
  #    track_new_devices: true
  - platform: bluetooth_le_tracker
    # device tracker will only look for the following global settings
    # under the configuration of the first configured platform
    interval_seconds: 12
    consider_home: 120
    # setting this to 'false' still results in new devices being added
    # to known_devices.yaml when they are discovered, but they wont be
    # tracked unless 'track' is set to 'true' for a device there (edit
    # the file to track a discovered device).
    track_new_devices: false
    track_battery: true
    new_device_defaults:
      track_new_devices: false


homeassistant:
  auth_providers:
    - type: command_line
      command: /usr/local/bin/authelia-auth.py
      args:
        - {{ hass_url }}
        - "--meta"
      meta: true
    #- type: homeassistant
  name: Home
  currency: EUR
  unit_system: metric
  time_zone: "Europe/Berlin"
  country: DE
  language: en
  external_url: https://{{ hass_url }}
  internal_url: https://{{ hass_url }}
  allowlist_external_dirs:
    - "{{ systemuserlist.hass.home }}/home-assistant/notify"
    - "{{ systemuserlist.hass.home }}/home-assistant/inputs"
    - "{{ deadspace_root }}/audio"
    - "/usr/var/media"
    - "/config"
  allowlist_external_urls:
    - "https://{{ hass_url }}"
    - "https://{{ static_url }}"
    - "https://{{ hass_notflix_url }}"
    - "https://www.{{ domain }}"
    - "https://{{ domain }}"
  media_dirs:
    media: "/usr/var/media"
  packages: !include_dir_named packages

http:
  server_host: 127.0.0.1
  server_port: 8123
  trusted_proxies:
    - 127.0.0.1
    #- 127.0.0.1/32
  use_x_forwarded_for: true
  use_x_frame_options: true

api:

websocket_api:

# https://www.home-assistant.io/integrations/wake_on_lan
wake_on_lan:

switch:
  {% for item in hass_wake_on_lan -%}
  - platform: wake_on_lan
    name: "wol_{{ item.name }}"
    mac: "{{ item.mac }}"
    host: "{{ item.host }}"
  {% endfor %}


# /api/prometheus
# default: all entities are includessd
#prometheus:

system_log:
  # was for 'remote.apple_tv' reconnect automation
  fire_event: false

{% set zones = {'zone': hass_zones.values() | list } -%}
{% set zones_yaml = zones | to_nice_yaml(indent=2) -%}
{{ zones_yaml | indent(2) | trim }}

# Text to speech
tts:
  - platform: voicerss
    api_key: !secret voicerss_api_key
  - platform: google_translate
  - platform: picotts
    language: "en-GB"

{% if hass_caldav | length > 0 -%}
calendar:
  {% for item in hass_caldav -%}
  # {{ item.name }}
  - platform: caldav
    url: "{{ item.url | trim }}"
    {% if 'username_secret' in item -%}
    username: !secret {{ item.username_secret | trim }}
    password: !secret {{ item.passwd_secret | trim }}
    {% endif -%}
    {# this can filter for events and create binary_sensor's for matches #}
    {# custom_calendars: [] #}

  {% endfor %}
{% endif %}

frontend:
  themes: !include_dir_merge_named themes

panel_custom:
  - name: zwave
    sidebar_title: Z-Wave
    sidebar_icon: mdi:z-wave
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/zwave_js'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: esphome
    sidebar_title: ESPHome
    sidebar_icon: mdi:car-esp
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/esphome'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: mqtt
    sidebar_title: MQTT
    sidebar_icon: mdi:emoticon-poop
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/mqtt'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: mobile_app
    sidebar_title: Mobile app
    sidebar_icon: mdi:cellphone
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/mobile_app'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator

  - name: logs
    sidebar_title: Logs
    sidebar_icon: mdi:file
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/logs'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: automations
    sidebar_title: Automations
    sidebar_icon: mdi:robot
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/automation/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: scripts
    sidebar_title: Scripts
    sidebar_icon: mdi:script
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/script/dashboard'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: integrations
    sidebar_title: Integrations
    sidebar_icon: mdi:integrated-circuit-chip
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: entities
    sidebar_title: Entities
    sidebar_icon: mdi:clover
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/entities'
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: owntone
    sidebar_title: OwnTone
    sidebar_icon: mdi:cast-variant
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/forked_daapd'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: sonos
    sidebar_title: Sonos
    sidebar_icon: mdi:speaker
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/sonos'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator
  - name: apple_tv
    sidebar_title: Apple TV
    sidebar_icon: mdi:apple
    js_url: /api/hassio/app/entrypoint.js
    url_path: 'config/integrations/integration/apple_tv'
    embed_iframe: true
    require_admin: false
    config:
      ingress: core_configurator

recorder:
  db_url: mysql://{{ systemuserlist.hass.username }}:@localhost/{{ systemuserlist.hass.username }}?charset=utf8mb4&unix_socket=/run/mysqld/mysqld.sock
  auto_purge: true
  auto_repack: true
  # See 2023.12.0 release notes
  purge_keep_days: 7
  exclude:
    event_types:
      - imap_content
      - opensky_entry
      - opensky_exit
    entities:
      - sensor.esphmoe_ble_names
      - sensor.ble_proxy_json_ble_scanner
      - sensor.austin
      - sensor.boston
      - sensor.iceland
      - sensor.utc
      - sensor.berlin
      - sensor.remote_pressed_event_context_id
      - sensor.time
      - sensor.date
      - sensor.date_time
      - sensor.date_time_utc
      - sensor.date_time_utc_2
      - sensor.date_time_iso
      - sensor.date_time_iso_2
      - sensor.time_date
      - sensor.time_utc
      - sensor.time_utc_2
      - binary_sensor.morning_alarm_is_today
      - sensor.morning_alarm_next
      - sensor.morning_alarm_next_wihout_offset
      - sensor.sorted_motion_last_changed
      - sensor.edge_wan_in2
      - sensor.ics_1
    entity_globs:
      - sensor.md_*
      - sensor.template_md_*
      - sensor.whois_*_days_until_expiration
      - sensor.uptime_*
      - sensor.unifi_uptime_*
      - sensor.esphome_uptime_*
      - sensor.*_uptime
      - input_text.esphome_private_ble_*
      - input_number.esphome_private_ble_*
      # Large sensors from android companion
      - sensor.*_active_notification_count
      - sensor.*_active_notifications
      - sensor.*_last_removed_notification
      - sensor.*_last_notification
      - sensor.*_last_used_app
      - sensor.*_last_reboot
      - sensor.*_app_tx_gb
      - sensor.*_app_rx_gb
      - sensor.*_app_memory
      - sensor.*_becon_monitor
      - sensor.*_ble_transmitter
      - sensor.*_current_time_zone
      - sensor.*_external_storage
      - sensor.*_battery_temperature
      - sensor.*_internal_storage
      - sensor.*_total_rx_gb
      - sensor.*_total_tx_gb
      - sensor.*_high_accuracy_update_interval
      - sensor.*_high_accuracy_update_interval
      - sensor.nexus_7_internal_*
      - sensor.oneplus_internal_*
      - sensor.nexus_7_steps_*
      - sensor.oneplus_steps_*
      - sensor.nexus_7_wifi_*
      - sensor.oneplus_wifi_*
      - sensor.nexus_7_geocoded_*
      - sensor.oneplus_geocoded_*
      - sensor.nexus_7_detected_*
      - sensor.oneplus_detected_*
      # LD2410 / ESPHome radar
      - binary_sensor.esphome_radar_*_has_target
      # Redundant ESPHome Private BLE sensors
      - sensor.esphome_*_private_ble_*_area
      - sensor.esphome_*_private_ble_device_tracker_*
      - sensor.esphome_*_private_ble_*_proxied
      - sensor.esphome_*_private_ble_*_distance
      - sensor.esphome_*_private_ble_*_max_signal
      - sensor.esphome_*_private_ble_*_signal
      - sensor.esphome_*_private_ble_*_esphome_proxy
      - sensor.esphome_*_baseline_0xco2eq
      - sensor.esphome_*_baseline_0xtvoc
      #- sensor.*_rx
      #- sensor.*_tx
      #- sensor.unifi_rx_esphome_*
      #- sensor.unifi_tx_esphome_*
      #- sensor.unifi_uptime_*
      - sensor.ble_private_source_*
      - sensor.tile_*
      - device_tracker.tile_*
      - sensor.esphome_*_time
      - sensor.esphome_*_hour
      - sensor.esphome_*_minute
      - sensor.esphome_*_adc_voltage
      - sensor.*_adc_a0
      - sensor.*_adc_*
      - sensor.last_seen_*
      - sensor.*_last_seen
      - sensor.rssi_*
      - sensor.*_rssi
      - sensor.*_ble_scanner
      - sensor.*_json_ble_scanner
      - device_tracker.*_*_*_*_*_*
      - sensor.random_*
      - sensor.netdata_turris_*
      - sensor.system_monitor_total_net_*
      - sensor.system_monitor_network_in_*
      - sensor.system_monitor_network_out_*
      - sensor.esphome_*_electric
      - sensor.esphome_*_electric_w
      - sensor.esphome_*_electric_w_*
      - sensor.esphome_electric_w_*


# ping_motion_hallway_west
# firmware_motion_hallway_west
# idle_tamper_motion_hallway_west
# idle_motion_hallway_west
# battery_level_motion_hallway_west
# node_status_motion_hallway_west
# illuminance_motion_hallway_west
# air_temparature_hallway_west_motion
# basic_motion_hallway_north
# sensor_status_motion_bedroom_east
# tamper_motion_bedroom_east
# seismic_intensity_motion_study_north

sensor:
  - platform: websocket_api
  - platform: time_date
    display_options:
      - 'time'
      #- 'time_date'
      - 'time_utc'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'

  - platform: worldclock
    time_zone: UTC
    name: UTC
  - platform: worldclock
    time_zone: Atlantic/Reykjavik
    name: Iceland
  - platform: worldclock
    time_zone: Europe/Berlin
    name: Berlin
  - platform: worldclock
    time_zone: America/New_York
    name: Boston
  - platform: worldclock
    time_zone: America/Chicago
    name: Austin
  - platform: linux_battery
    name: battery_level_system
    system: linux
    battery: 0

  # YAML config was removed :(
  # https://www.home-assistant.io/integrations/dwd_weather_warnings/
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/warning_codes_pdf.pdf?__blob=publicationFile&v=5
  # https://www.dwd.de/DE/leistungen/opendata/help/warnungen/cap_warncellids_csv.html
  # 111000000;Berlin;DE300;Berlin;BXX
  # 711000002;Berlin - Friedrichshain-Kreuzberg;;B-Friedrh./Kbg.;BXB
  # 711000003;Berlin - Pankow;;B-Pankow;BXG
  # 711000011;Berlin - Lichtenberg;;B-Lichtenberg;BXC
  # 811000000;Stadt Berlin;;Berlin;
  # 911000000;Berlin;;Land Berlin;LBE
  # 911100000;Berlin;;Berlin;BXZ
  # 995000000;Brandenburg/Berlin;;Berlin/Brandenb;DWPD
  #
  #- platform: dwd_weather_warnings
  #  # Berlin - Friedrichshain-Kreuzberg
  #  region_name: 711000002
  #
  #- platform: dwd_weather_warnings
  #  # Berlin - Pankow
  #  region_name: 711000003
  #
  #- platform: dwd_weather_warnings
  #  # Stadt Berlin
  #  region_name: 811000000


input_select:
  heating_mode_test:
    name: Heating Mode Test
    options:
      - "auto"
      - "heat"
      - "cool"
      - "off"
    initial: "off"
    icon: mdi:thermometer-lines


input_number:
  heating_setpoint_test:
    name: Heating Setpoint Test
    icon: mdi:home-thermometer
    initial: 0
    min: 0
    max: 35
    step: 0.5


#influxdb:
#  api_version: "1"
#  host: "{{ influxdb_url }}"
#  port: 443
#  database: hass
#  username: hass
#  password: !secret influxdb_pass
#  ssl: true
#  verify_ssl: true
#  max_retries: 10
#  precision: "s"
#  # State object attrs to use as measurement name
#  #   Possible values: unit_of_measurement, domain__device_class, entity_id
#  #   Default: unit_of_measurement
#  #measurement_attr: entity_id
#  #
#  # Name to use when the measurement_attr state attribute does not exist
#  # defaults to: entity_id
#  #default_measurement: state
#  #
#  # Measurement name to use instead of measurement_attr or default measurement (Stores all data points in a single measurement)
#  #override_measurement:
#  include:
#    entity_globs:
#      - sensor.electric_v_*
#      - sensor.electric_w_*
#      - sensor.esphome_*_power
#      - sensor.esphome_*_voltage
#      - sensor.esphome_*_current
#    #entities:
#    #  - sensor.washing_machine_electric_consumption_w
#    #  - sensor.washing_machine_electric_consumption_kwh
#  tags_attributes:
#    - friendly_name
#    #- entity_id
#  tags:
#    # docs say list but example shows dict
#    instance: prod
#    source: hass
#    home: S21

matrix:
  homeserver: https://{{ matrix_url }}
  username: !secret matrix_username
  password: !secret matrix_password
  rooms: !secret matrix_rooms
  commands:
    - word: hass
      name: hass

# https://www.home-assistant.io/integrations/twilio/
twilio:
  account_sid: "{{ hass_twilio.main.account_sid }}"
  auth_token: "{{ hass_twilio.main.auth_token }}"

digital_ocean:
  access_token: !secret do_token

notify:
  - name: matrix
    platform: matrix
    default_room: !secret matrix_default_room

  - name: twilio_sms
    platform: twilio_sms
    from_number: "{{ hass_twilio.main.main_number }}"

  - name: twilio_call
    platform: twilio_call
    from_number: "{{ hass_twilio.main.main_number }}"

  - name: file_notify
    platform: file
    timestamp: true
    filename: {{ systemuserlist.hass.home }}/home-assistant/notify/file_notify.txt

  {% for item in hass_notify_smtp -%}
    {% set name = "email_" ~ item.name if item.name not in ["pagerduty"] else item.name -%}
  - name: {{ name }}
    platform: smtp
    timeout: 60
    sender: hass@{{ domain }}
    recipient:
      - {{ item.email }}
    server: !secret smtp_server
    port: {{ smtp_port_starttls }}
    username: !secret smtp_username
    password: !secret smtp_passwd
    encryption: starttls
    verify_ssl: {{ item.verify_ssl|default(true) | lower }}
    sender_name: "{{ hass_url }}"
  {% endfor %}


shell_command:
  matrixmsg: /usr/local/bin/matrixmsg.py

# https://www.home-assistant.io/integrations/python_script/
python_script:

logger:
  default: warning
  logs:
    pyatv: warning
    homeassistant.components.apple_tv: warning

# https://www.home-assistant.io/integrations/browser/
#browser:

{% if hass_rtl433_enabled|default(false) -%}
mqtt:
  sensor:
    - state_topic: rtl_433/+/events
{% endif %}

# enable SVT play
svt_play:

battery_notes:
  enable_autodiscovery: true
  default_battery_low_threshold: 20
  battery_increase_threshold: 25

sonos:
  # useful for not using docker host networking
  # and for avoiding auto discovery in general
  media_player:
    # tells the sonos devices how to reach hass
    #advertise_addr: {{ local_ip }}
    advertise_addr: {{ ansible_default_ipv4.address }}
    # tells hass how to reach the sonos speakers
    hosts:
      {% for item in hass_sonos.media_player_areas -%}
      - sonos-{{ item }}.{{ inventory_hostname.split('.')[1:] | join(".") }}
      {% endfor %}

# Buttons as a Service (BaaS)
# https://www.home-assistant.io/integrations/keyboard/
keyboard:

media_player:
  - platform: mpd
    host: {{ owntone_url }}
    port: 6600
    name: OwnTone MPD
  - platform: emby
    host: {{ jellyfin_url }}
    api_key: {{ hass_jellyfin_api_key }}
    port: 443
    ssl: true

{% if hass_emulated_roku.enabled -%}
emulated_roku:
  {% for item in hass_emulated_roku.rokus|default([]) -%}
  - name: {{ item.name }}
    listen_port: {{ item.listen_port }}
    advertise_port: {{ item.advertise_port | default(item.listen_port) }}
    host_ip: {{ hass_emulated_roku.listen_ip | default(ansible_default_ipv4.address) }}
    advertise_ip: {{ ansible_default_ipv4.address }}
    upnp_bind_multicast: {{ hass_emulated_roku.upnp_bind_multicast | lower }}
  {% endfor %}
{% endif %}

{% if hass_emulated_hue.enabled -%}
emulated_hue:
  host_ip: {{ hass_emulated_hue.listen_ip | default(ansible_default_ipv4.address) }}
  listen_port: {{ hass_emulated_hue.listen_port }}
  advertise_ip: {{ ansible_default_ipv4.address }}
  advertise_port: {{ hass_emulated_hue.advertise_port | default(hass_emulated_hue.listen_port) }}
  upnp_bind_multicast: {{ hass_emulated_hue.upnp_bind_multicast | lower }}
  off_maps_to_on_domains:
    - script
    - scene
  expose_by_default: false
  exposed_domains:
    {{ hass_emulated_hue.exposed_domains | to_nice_yaml(indent=2) | indent(4) | trim }}
  entities:
    {% for item in hass_emulated_hue.exposed_entities|default([]) -%}
    {{ item }}:
      hidden: false
    {% endfor %}
{% endif %}
