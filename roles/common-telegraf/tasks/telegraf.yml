---

- name: clean up repo keys with invalid names or paths
  file:
    state: absent
    path: "{{ item }}"
  loop_control:
    label: "{{ item }}"
  with_items:
    - /usr/share/keyrings/influxdb-archive-keyring.gpg

- name: clean up extra repos.d files with other files
  file:
    path: "/etc/apt/sources.list.d/{{ item }}"
    state: absent
  loop_control:
    label: "{{ item }}"
  with_items:
    - repos_influxdata_com_debian.list
    - repos_influxdata_com_ubuntu.list
    - repos_influxdata_com_raspbian.list

- name: group for telegraf user
  group:
    state: present
    name: "{{ systemuserlist.telegraf.username }}"
    gid: "{{ systemuserlist.telegraf.gid }}"
  tags: users
  notify: restart telegraf

- name: telegraf user
  user:
    state: present
    name: "{{ systemuserlist.telegraf.username }}"
    group: "{{ systemuserlist.telegraf.username }}"
    shell: "{{ systemuserlist.telegraf.shell }}"
    uid: "{{ systemuserlist.telegraf.uid }}"
    create_home: true
    home: "{{ systemuserlist.telegraf.home }}"
    move_home: true
    system: true
  tags: users
  notify: restart telegraf

- name: allow telegraf to sudo and use smartctl
  template:
    src: telegraf.sudoers.j2
    dest: /etc/sudoers.d/telegraf
    mode: 0440
    owner: root
    group: root
  when: telegraf_smart_disks
  notify: restart telegraf
  tags: users

- name: install virtualenv with packages
  pip:
    name: "{{ item }}"
    state: present
    virtualenv: /var/lib/virtualenvs/telegraf-scripts
    virtualenv_site_packages: false
    virtualenv_command: python3 -m venv
  when: not ansible_check_mode
  with_items:
    - humanize
  tags:
    - common-telegraf-virtualenv
    - venvs
    - virtualenvs
    - pip
    - packages
    - pip-latest

- name: template vnstat script
  template:
    src: telegraf-vnstat.py.j2
    dest: /usr/local/bin/telegraf-vnstat.py
    mode: 0775
    owner: telegraf
    group: telegraf
  notify: restart telegraf

# - name: get list of existing groups
#   shell: "/usr/bin/getent group | awk -F':' '{print $1}'"
#   register: etc_groups
#   check_mode: false
#   changed_when: false
#   tags: users
#
# use with:
#
#  with_items: "{{ systemuserlist.telegraf.groups }}"
#  when: 'item in etc_groups.stdout_lines'

#- name: get influxdb key
#  get_url:
#    url:  https://repos.influxdata.com/influxdb-archive.key
#    dest: /etc/apt/trusted.gpg.d/influxdb-archive.asc
#  tags:
#    - influx-repo
#    - packages

- name: install dearmored influxdb key
  copy:
    src: influxdb-archive-keyring.asc
    dest: /usr/share/keyrings/influxdb-archive-keyring.asc
    owner: root
    group: root
    mode: '0644'
  tags:
    - influx-repo
    - packages

# There is currently a bug in the `python3-apt` package for
# Debian testing/trixie, which the `apt_repository` module
# uses on the host.
#
# >>> import platform
# >>> platform.freedesktop_os_release()["VERSION"]
# KeyError: 'VERSION'
#
# So instead of using the `apt_repository` module, we just
# template the file in place instead.

- name: add repo
  template:
    src: influxdata.list.j2
    dest: /etc/apt/sources.list.d/influxdata.list
    mode: "0644"
    owner: root
    group: root
  register: influxdata_repo
  tags:
    - packages
    - influx-repo

- name: update apt cache if influxdata repo changed
  apt:
    update_cache: true
  when:
    - influxdata_repo.changed
  tags:
    - packages

- name: install latest version of telegraf
  apt:
    name: telegraf
    state: latest
    update_cache: false
  tags:
    - packages
  notify: restart telegraf

# telegraf errors and doesnt do the smart check if this
# isnt installed, regardless of if there are nvme disks
- name: install nvme-cli for telegraf s.m.a.r.t. monitoring
  apt:
    name: nvme-cli
    state: latest
  when: telegraf_smart_disks
  tags:
    - packages
  notify: restart telegraf

- name: template telegraf config
  template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
  notify:
    - restart telegraf
  tags:
    - telegraf-config
    - telegraf.conf

- name: enable telegraf
  service:
    name: telegraf
    state: started
    enabled: true
  notify: restart telegraf

- meta: flush_handlers
