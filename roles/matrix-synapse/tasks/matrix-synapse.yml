---

- name: make dirs
  file:
    path: "{{ systemuserlist.matrix.home }}/{{ item.name }}"
    state: directory
    mode: "{{ item.mode|default(750) }}"
    owner: "{{ item.owner|default('matrix') }}"
    group: "{{ item.group|default('matrix') }}"
  with_items:
    - name: data
    - name: element
      mode: 644
    # - name: postgres
    #   owner: 70
    #   mode: 700
    - name: html
      mode: 750
      group: www-data
    - name: registration
    - name: bridge-email

- name: matrix index.html
  template:
    src: index.html.j2
    dest: "{{ systemuserlist.matrix.home }}/html/index.html"
    owner: matrix
    group: www-data
    mode: 0750
  tags:
    - matrix-html

- name: template nginx vhost
  template:
    src: 01-matrix.j2
    dest: /etc/nginx/sites-enabled/01-matrix
    owner: root
    group: root
    mode: 0644
  tags:
    - nginx
    - matrix-nginx
  notify: reload nginx

- name: template config
  template:
    src: "{{ item }}.j2"
    dest: "{{ systemuserlist.matrix.home }}/data/{{ item }}"
    mode: 0600
    owner: matrix
    group: matrix
  with_items:
    - log.config
    - homeserver.yaml
    - turnserver.conf
  tags:
    - matrix-config

- name: copy signing key
  copy:
    src: private/matrix/{{ matrix_domain }}.signing.key
    dest: "{{ systemuserlist.matrix.home }}/data/"
    mode: 0644
    owner: matrix
    group: matrix

- name: redis container for matrix synapse
  docker_container:
    name: matrix-redis
    image: "redis:latest"
    restart_policy: "unless-stopped"
    auto_remove: no
    detach: yes
    pull: yes
    state: started
    container_default_behavior: compatibility
    env:
      REDIS_HOST: matrix-redis
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
  tags:
    - matrix-container
    - docker-containers

- name: postgresql user
  postgresql_user:
    name: "{{ systemuserlist.matrix.username }}"
    password: "{{ systemuserlist.matrix.postgres_passwd }}"
    encrypted: true
    state: present
  become_user: postgres
  tags:
    - users
    - postgresql
    - postgresql-users

- name: postgresql database
  postgresql_db:
    name: "{{ systemuserlist.matrix.username }}"
    encoding: UTF8
    template: template0
    state: present
    lc_ctype: "C"
    lc_collate: "C"
  become_user: postgres
  tags:
    - users
    - postgresql
    - postgresql-users


# register_new_matrix_user -u $username -t bot -c /data/homeserver.yaml http://localhost:8008

- name: start synapse container
  docker_container:
    name: matrix
    image: avhost/docker-matrix:latest
    auto_remove: false
    detach: true
    pull: true
    restart_policy: "unless-stopped"
    state: started
    user: "{{ systemuserlist.matrix.uid }}:{{ systemuserlist.matrix.gid }}"
    container_default_behavior: compatibility
    networks_cli_compatible: false
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.matrix }}"
    mounts:
      - type: bind
        source: "{{ systemuserlist.matrix.home }}/data"
        target: /data
      - type: bind
        read_only: true
        source: /etc/letsencrypt/live/{{ matrix_domain }}/fullchain.pem
        target: /data/{{ matrix_domain }}.crt
      - type: bind
        read_only: true
        source: /etc/letsencrypt/live/{{ matrix_domain }}/privkey.pem
        target: /data/{{ matrix_domain }}.key
    env:
      SERVER_NAME: "{{ matrix_domain }}"
  tags:
    - matrix-container
    - docker-containers

- name: start synapse-admin container
  docker_container:
    name: matrix-admin
    image: awesometechnologies/synapse-admin:latest
    auto_remove: false
    detach: true
    pull: true
    restart_policy: "unless-stopped"
    state: started
    container_default_behavior: compatibility
    networks_cli_compatible: false
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.matrix_admin }}"
  tags:
    - matrix-container
    - matrix-admin-container
    - matrix-admin
    - docker-containers

- name: template scripts
  template:
    src: "{{ item }}.j2"
    dest: /usr/local/bin/{{ item }}
    mode: 0755
    owner: root
    group: root
  tags:
    - backup
    - matrix-backup
    - matrix-scripts
    - matrix-registration
  loop_control:
    label: "{{ item }}"
  with_items:
    - synapse-postgres-backup.sh
    - matrix-invite.py

- name: cron file
  template:
    src: matrix-cron.j2
    dest: /etc/cron.d/matrix
    mode: 0600
    owner: root
    group: root
  tags:
    - backup
    - matrix-backup
    - cron

- name: telegraf file
  template:
    src: matrix-telegraf.conf.j2
    dest: /etc/telegraf/telegraf.d/matrix.conf
  notify:
    - restart telegraf
  tags:
    - telegraf-config

- name: template filebeat config
  template:
    src: filebeat-synapse.yml.j2
    dest: "/etc/filebeat/inputs.d/synapse.yml"
    owner: root
    group: root
    mode: 0600
  tags:
    - filebeat
  notify: restart filebeat
