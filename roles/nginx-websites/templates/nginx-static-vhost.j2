server {
   listen 80;
   server_name {{ item.name }} {{ item.aliases | default([]) | join (" ")  }};

    return 301 https://$host$request_uri;
}

server {
{% if item.interface is defined %}
  listen {{ item.interface }}:443 ssl;
{% else %}
  listen 443 ssl;
  listen   [::]:443 ssl; # listen for ipv6
{% endif %}

  server_name {{ item.name }} {{ item.aliases | default([]) |join (" ") }};

  root /var/www/{{ item.name }};
  location / {
    index index.html index.htm;
  }

  location ~ ^(.*)/$ {
    autoindex {{ item.autoindex|default('on') }};
    autoindex_exact_size off;
    {% if item.custom_autoindex|default(True) %}

    add_before_body /.shared/header.html;
    add_after_body /.shared/footer.html;

    {% endif %}

    {% if item.fancyindex|default(false) %}
    fancyindex on;

    {% endif %}

  }
  location ~* ^.+\.(whois|log|grep|pub)$ {
    add_header Content-Type text/plain;
  }
{% if 'matrix' in item %}
  location = /.well-known/matrix/server {
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
    return 200 '{"m.server": "{{ item.matrix.server }}:{{item.matrix.port}}"}';
  }
  location = /.well-known/matrix/client {
    default_type application/json;
    add_header Access-Control-Allow-Origin *;
    return 200 '{"m.homeserver":{"base_url":"https://{{ item.matrix.server }}"}}';
  }
{% endif %}
{% if item.force_download | default(false) %}

  add_header Content-disposition "attachment; filename=$1";
{% endif %}
  access_log /var/log/nginx/access_{{ item.name }}.log main;
  error_log /var/log/nginx/error_{{ item.name }}.log warn;

  ssl_session_timeout 5m;

  # using wildcard for our domain, but cloudflare doesnt care
  {% set domain = '.'.join(item.name.split('.')[-2:]) %}
  ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

  add_header Referrer-Policy "no-referrer" always;
  #add_header Content-Security-Policy "default-src 'self' sudo.is *.sudo.is; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'";
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Download-Options "noopen" always;
  add_header X-Frame-Options "SAMEORIGIN" always;

  add_header X-Permitted-Cross-Domain-Policies "none" always;
  add_header X-Robots-Tag "none" always;
  add_header X-XSS-Protection "1; mode=block" always;
}
