---

- name: install certs
  copy:
    src: "/usr/local/etc/letsencrypt/live/{{ item }}"
    dest: "/usr/local/etc/certs/"
    owner: root
    group: root
    mode: 0755
  tags:
    - letsencrypt-certs
  notify: reload nginx
  vars:
    prediff_cmd: echo
  with_items:
    - "{{ apt_url }}"
    - "{{ jenkins_url }}"

- name: template nginx vhost(s)
  template:
    src: "{{ item }}.j2"
    dest: /etc/nginx/sites-enabled/{{ item }}
    owner: root
    group: root
    mode: 0644
  tags:
    - nginx
    - jenkins-nginx
  with_items:
    - 01-jenkins.conf
    - 01-apt.conf
  notify: reload nginx

- name: create dirs
  file:
   path: "{{ jenkins_root }}/{{ item }}"
   state: directory
   mode: '0755'
   owner: jenkins
   group: jenkins
   recurse: no
  with_items:
    - home
    - home/.docker
    - home/artifacts
    - etc/docker

- name: copy docker config for dockerhub
  template:
    src: private/jenkins/docker.config.json.j2
    dest: "{{ jenkins_root }}/home/.docker/config.json"
    mode: 0755
    owner: jenkins
    group: jenkins
  tags:
    - docker

- name: create dirs for {{ apt_url }}
  file:
    path: "/var/www/{{ apt_url }}/{{ item }}"
    state: directory
    mode: 0755
    owner: jenkins
    group: www-data
  with_items:
    - amd64
    - armhf
    - all

- name: create .gnupg
  file:
   path: "{{ jenkins_root }}/home/.gnupg"
   state: directory
   mode: 0700
   owner: jenkins
   group: jenkins


- name: copy gpg stuff
  template:
    src: "private/jenkins/{{ item }}.j2"
    dest: "{{ jenkins_root }}/home/.gnupg/{{ item }}"
    mode: 0700
    owner: jenkins
    group: jenkins
  with_items:
    - "{{ apt_url }}.conf"
    - "{{ apt_url }}.gpg"
    - "{{ apt_url }}.key"

- name: copy KEY.gpg
  template:
    src: "private/jenkins/{{ apt_url }}.gpg.j2"
    dest: "/var/www/{{ apt_url }}/KEY.gpg"
    mode: 0755
    owner: jenkins
    group: www-data


- name: start docker container
  docker_container:
    name: "jenkins"
    image: "benediktkr/jenkins:lts"
    hostname: "jenkins"
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "unless-stopped"
    container_default_behavior: compatibility
    #user: "{{systemuserlist.jenkins.uid}}:{{systemuserlist.jenkins.gid}}"
    state: started
    ports:
      - "{{ jenkins_bind_addr | default('127.0.0.1') }}:{{ jenkins_port }}:8080/tcp"
      - "50000:50000/tcp"
    volumes:
      - "{{ jenkins_root }}/home:/var/jenkins_home"
      - "{{ jenkins_root }}/etc/docker:/etc/docker"
      - "/var/www/{{ apt_url }}:/var/www/{{ apt_url }}"
      - /var/run/docker.sock:/var/run/docker.sock
    networks_cli_compatible: no
    networks:
      - name: bridge
      - name: bridgewithdns
  tags:
    - jenkins-container
    - docker-containers

# sudo docker exec -it jenkins /usr/bin/docker login
