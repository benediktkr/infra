---

- name: create dir structure
  file:
    path: "{{ item[1].root }}/{{ item[0] }}"
    state: directory
    mode: 0750
    owner: www-data
    group: www-data
  loop_control:
    label: "{{ item[1].root }}/{{ item[0] }}"
  with_nested:
    - - html
      - data
    - "{{ nextclouds }}"


# test this
- name: template script to write version string to txt file
  template:
    src: nextcloudversion.sh.j2
    dest: /usr/local/bin/nextcloudversion.sh
    mode: 0750
    owner: root
    group: root

- name: versions to variable
  command: /usr/local/bin/nextcloudversion.sh
  register: cmdnextcloudversion
  check_mode: no  # warning: dragons
  changed_when: false

- set_fact:
    nc_versions: "{{ cmdnextcloudversion.stdout | from_json }}"
  check_mode: no

- debug:
    var:
      nc_versions

- name: template config.php
  template:
    src: config.php.j2
    dest: "{{ item.root }}/html/config/config.php"
    mode: 0750
    owner: www-data
    group: www-data
  with_items: "{{ nextclouds }}"
  loop_control:
    label: "{{ item.name }}"

- name: start redis containers
  docker_container:
    name: "redis_{{ item.name }}"
    image: "redis:latest"
    auto_remove: yes
    detach: yes
    pull: yes
    state: started
    env:
      REDIS_HOST: "redis_{{ item.name }}"
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
  when: item.redis
  with_items: "{{ nextclouds }}"
  loop_control:
    label: "redis_{{ item.name }}"
  tags:
    - nextcloud-container
    - redis

# Had to copy ssl_match_hostname from
#   /usr/local/lib/python2.7/dist-pacakges/backports
# to
#  /usr/lib/python2.7/dist-packages/backports
# after upgrading debian
- name: start nextcloud containers
  docker_container:
    name: "{{ item.name }}"
    image: "nextcloud:{{ item.version }}"
    auto_remove: no
    detach: yes
    pull: yes
    state: started
    restart_policy: "unless-stopped"
    env:
      NEXTCLOUD_DATA_DIR: "/data"
    ports:
      - "127.0.0.1:{{ item.exposed_port }}:{{ item.container_port }}"
    volumes:
      - "{{ item.root }}/data:/data"
      - "{{ item.root }}/html:/var/www/html"
      - /var/run/mysqld/mysqld.sock:/var/run/mysqld/mysqld.sock
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ item.docker_ip }}"
  with_items: "{{ nextclouds }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - nextcloud-container

- name: template nginx vhost
  template:
    src: nginx-site.conf.j2
    dest: /etc/nginx/sites-enabled/01-nextcloud
  tags:
    - nginx
  notify: reload nginx

- name: template uploadsize.conf
  template:
    src: nginx-uploadsize.conf.j2
    dest: /etc/nginx/conf.d/uploadsize.conf
  tags:
    - nginx
  notify: reload nginx

- name: template cron file
  template:
    src: nextcloud-cron.j2
    dest: /etc/cron.d/nextcloud
  tags: cron

- name: wait for nextclouds
  wait_for:
    port: "{{ item.container_port }}"
    host: "{{ item.docker_ip }}"
    sleep: 2
  when: item.docker_ip is defined
  with_items: "{{ nextclouds }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - docker
