---
# resetting password:
#
# $ curl -XPOST -D- 'http://{{bridgewithdns.elk_es }}:9200/_security/user/elastic/_password' \
#     -H 'Content-Type: application/json' \
#     -u elastic:<your current elastic password> \
#     -d '{"password" : "<your new password>"}'

- name: create dir structure
  file:
    path: "{{ elk_root }}/{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ elk_uid }}"
    group: "{{ elk_gid }}"
    recurse: no
  with_items:
    - elasticsearch
    - elasticsearch/config
    - elasticsearch/data
    - logstash
    - logstash/config
    - logstash/pipeline
    - kibana
    - kibana/config

- name: template configs
  template:
    src: "{{ item }}.yml.j2"
    dest: "{{ elk_root }}/{{ item }}/config/{{ item }}.yml"
    owner: "{{ elk_uid }}"
    group: "{{ elk_gid }}"
    mode: 0644
  with_items:
    - elasticsearch
    - logstash
    - kibana

- name: template pipeline config
  template:
    src: pipeline-logstash.yml.j2
    dest: "{{ elk_root }}/logstash/pipeline/logstash.yml"
    owner: "{{ elk_uid }}"
    group: "{{ elk_gid }}"
    mode: 0644

# - name: template log4j2 file for logstash
#   template:
#     src: log4j2.properties.j2
#     dest: "{{ elk_root }}/logstash/config/log4j2.properties"
#     owner: "{{ elk_uid }}"
#     group: "{{ elk_gid }}"
#     mode: 0644

- name: start elasticsearch container
  docker_container:
    name: elasticsearch
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ elk_version }}
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "no"
    state: started
    container_default_behavior: compatibility
    #user: "{{ elk_uid }}:{{ elk_gid }}"
    mounts:
      - type: bind
        source: "{{ elk_root }}/elasticsearch/config/elasticsearch.yml"
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: yes
      - type: bind
        source: "{{ elk_root }}/elasticsearch/data"
        target: /usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    env:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      ELASTIC_PASSWORD: "{{ elk_default_password }}"
      discovery.type: single-node
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.elasticsearch }}"
    labels:
      dockerlogs_format: "json"
  tags:
    - docker-containers
    - elk-containers
    - elasticsearch-container

- name: start logstash container
  docker_container:
    name: logstash
    hostname: logstash
    image: docker.elastic.co/logstash/logstash:{{ elk_version }}
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "no"
    state: started
    container_default_behavior: compatibility
    mounts:
      - type: bind
        source: "{{ elk_root }}/logstash/config/logstash.yml"
        target: /usr/share/logstash/config/logstash.yml
        read_only: yes
      - type: bind
        source: "{{ elk_root }}/logstash/pipeline"
        target: /usr/share/logstash/pipeline
        read_only: yes
    ports:
      - "127.0.0.1:5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "{{ logstash_syslog_port }}:{{ logstash_syslog_port }}/udp"
      - "127.0.0.1:9600:9600"
    env:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    labels:
      dockerlogs_format: "plain"
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.logstash }}"
  tags:
    - docker-containers
    - elk-containers
    - logstash-container

- name: start kibana container
  docker_container:
    name: kibana
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:{{ elk_version }}
    auto_remove: no
    detach: yes
    pull: yes
    restart_policy: "no"
    state: started
    container_default_behavior: compatibility
    mounts:
      - type: bind
        source: "{{ elk_root }}/kibana/config"
        target: /usr/share/kibana/config
        read_only: yes
    ports:
      - "127.0.0.1:5601:5601"
    networks_cli_compatible: no
    networks:
      - name: bridgewithdns
        ipv4_address: "{{ bridgewithdns.kibana }}"
    labels:
      dockerlogs_format: "json"
  tags:
    - docker-containers
    - elk-containers
    - kibana-container
